<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Levi&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leviduan.com/"/>
  <updated>2020-06-05T02:32:21.312Z</updated>
  <id>http://leviduan.com/</id>
  
  <author>
    <name>Levi Duan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React native -Loading Page</title>
    <link href="http://leviduan.com/2020/06/04/2020-06-04-1/"/>
    <id>http://leviduan.com/2020/06/04/2020-06-04-1/</id>
    <published>2020-06-04T08:50:02.000Z</published>
    <updated>2020-06-05T02:32:21.312Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes the page is loading, we will keep a loading page to give user more user experience, how it works? We can use “Modal” and “ActivityIndicator” do it very well.</p><p>Let us start:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123;</span><br><span class="line">    ActivityIndicator,</span><br><span class="line">    Modal</span><br><span class="line">&#125; from &apos;react-native&apos;;</span><br><span class="line"></span><br><span class="line">export default class Test extends React.Component &#123;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;Fragment&gt;</span><br><span class="line">                &lt;StatusBar barStyle=&quot;dark-content&quot; /&gt;</span><br><span class="line">                &lt;SafeAreaView style=&#123;styles.container&#125;&gt;</span><br><span class="line">                     &lt;Modal</span><br><span class="line">                        transparent=&#123;true&#125;</span><br><span class="line">                        animationType=&#123;&apos;none&apos;&#125;</span><br><span class="line">                        visible=&#123;this.state.isLoading&#125;</span><br><span class="line">                        onRequestClose=&#123;() =&gt; &#123;console.log(&apos;close modal&apos;)&#125;&#125;&gt;</span><br><span class="line">                        &lt;View style=&#123;styles.modalBackground&#125;&gt;</span><br><span class="line">                            &lt;View style=&#123;styles.activityIndicatorWrapper&#125;&gt;</span><br><span class="line">                            &lt;ActivityIndicator style=&#123;&#123; position: &apos;absolute&apos;, left: 0, right: 0, top: 0, bottom: 0, margin: &quot;auto&quot;&#125;&#125;/&gt;</span><br><span class="line">                            &lt;/View&gt;</span><br><span class="line">                        &lt;/View&gt;</span><br><span class="line">                    &lt;/Modal&gt;</span><br><span class="line">                &lt;/SafeAreaView&gt;</span><br><span class="line">            &lt;/Fragment&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = StyleSheet.create(&#123;</span><br><span class="line">    container: &#123;</span><br><span class="line">        flex: 1,</span><br><span class="line">        flexDirection: &apos;column&apos;,</span><br><span class="line">        height: &apos;100%&apos;,</span><br><span class="line">        width: &apos;100%&apos;,</span><br><span class="line">        backgroundColor: &apos;#F3F3F3&apos;,</span><br><span class="line">        alignItems: &apos;center&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">      activityIndicatorWrapper: &#123;</span><br><span class="line">        backgroundColor: &apos;#FFFFFF&apos;,</span><br><span class="line">        height: 70,</span><br><span class="line">        width: 70,</span><br><span class="line">        borderRadius: 10,</span><br><span class="line">        display: &apos;flex&apos;,</span><br><span class="line">        alignItems: &apos;center&apos;,</span><br><span class="line">        justifyContent: &apos;space-around&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      modalBackground: &#123;</span><br><span class="line">        flex: 1,</span><br><span class="line">        alignItems: &apos;center&apos;,</span><br><span class="line">        flexDirection: &apos;column&apos;,</span><br><span class="line">        justifyContent: &apos;space-around&apos;,</span><br><span class="line">        backgroundColor: &apos;#00000040&apos;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sometimes the page is loading, we will keep a loading page to give user more user experience, how it works? We can use “Modal” and “Activ
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - Push Notification (Firebase)</title>
    <link href="http://leviduan.com/2020/06/04/2020-06-04/"/>
    <id>http://leviduan.com/2020/06/04/2020-06-04/</id>
    <published>2020-06-04T07:50:02.000Z</published>
    <updated>2020-06-04T08:34:38.296Z</updated>
    
    <content type="html"><![CDATA[<p>How to add Push Notification in your project? I use firebase to send cloud message by Push Notification. First of all you click the website “<a href="https://rnfirebase.io/&quot;" target="_blank" rel="noopener">https://rnfirebase.io/&quot;</a> , and click menu “Cloud Messaging”</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Install &amp; setup the app module</span><br><span class="line">yarn add @react-native-firebase/app</span><br><span class="line"></span><br><span class="line"># Install the messaging module</span><br><span class="line">yarn add @react-native-firebase/messaging</span><br><span class="line"></span><br><span class="line"># If you&apos;re developing your app using iOS, run this command</span><br><span class="line">cd ios/ &amp;&amp; pod install</span><br></pre></td></tr></table></figure><h3 id="iOS-Setup"><a href="#iOS-Setup" class="headerlink" title="iOS Setup"></a>iOS Setup</h3><p>AppDelegate.m</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> Firebase;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> () &lt;<span class="title">FIRMessagingDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AppDelegate</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    [FIRApp configure];</span><br><span class="line">    [application registerForRemoteNotifications];</span><br><span class="line">    [FIRMessaging messaging].delegate = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) messaging:(FIRMessaging *)messaging didReceiveRegistrationToken:(<span class="built_in">NSString</span> *)fcmToken &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"FCM registration token: %@"</span>, fcmToken);</span><br><span class="line">    <span class="comment">// Notify about received token.</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dataDict = [<span class="built_in">NSDictionary</span> dictionaryWithObject:fcmToken forKey:<span class="string">@"token"</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:</span><br><span class="line">     <span class="string">@"FCMToken"</span> object:<span class="literal">nil</span> userInfo:dataDict];</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> If necessary send token to application server.</span></span><br><span class="line">    <span class="comment">// Note: This callback is fired at each app startup and whenever a new token is generated.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error &#123;</span><br><span class="line">  <span class="built_in">NSLog</span>(<span class="string">@"error: %@"</span>, error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Android-Setup"><a href="#Android-Setup" class="headerlink" title="Android Setup"></a>Android Setup</h3><p>/appName/android/app/src/main/AndroidManifest.xml</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;service android:name=<span class="string">".MyFirebaseMessagingService"</span> android:exported=<span class="string">"false"</span>&gt;</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">"com.google.firebase.MESSAGING_EVENT"</span> /&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure><p>/android/app/src/main/java/com/appName/MyFirebaseMessagingService.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.stylepedia;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.firebase.messaging.FirebaseMessagingService;</span><br><span class="line"><span class="keyword">import</span> com.google.firebase.messaging.RemoteMessage;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirebaseMessagingService</span> <span class="keyword">extends</span> <span class="title">FirebaseMessagingService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String TAG = <span class="string">"FCMDemo"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReceived</span><span class="params">(RemoteMessage remoteMessage)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// TODO(developer): Handle FCM messages here.</span></span><br><span class="line">        Log.d(TAG, <span class="string">"From: "</span> + remoteMessage.getFrom());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (remoteMessage.getData().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">"Message data payload: "</span> + remoteMessage.getData());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check if message contains a notification payload.</span></span><br><span class="line">        <span class="keyword">if</span> (remoteMessage.getNotification() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">"Message Notification Body: "</span> + remoteMessage.getNotification().getBody());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Also if you intend on generating your own notifications as a result of a received FCM</span></span><br><span class="line">        <span class="comment">// message, here is where that should be initiated. See sendNotification method below.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRegistrationToServer</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this method to send token to your app server.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNewToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"From: "</span> + token);</span><br><span class="line">        sendRegistrationToServer(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h3><p>You can get token by this function, if the device didn’t open Push Notification, you won’t get the token, so you make sure that the user have opened the notifications.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> messaging <span class="keyword">from</span> <span class="string">'@react-native-firebase/messaging'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!messaging().isDeviceRegisteredForRemoteMessages) &#123;</span><br><span class="line">    messaging().registerDeviceForRemoteMessages()</span><br><span class="line">&#125;</span><br><span class="line">messaging().getToken()</span><br><span class="line">.then(<span class="function"><span class="params">fcmToken</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (fcmToken) &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(fcmToken)</span><br><span class="line">    <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.iosTokenNetWork(fcmToken)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.androidTokenNetWork(fcmToken)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">'user doesn t have a device token yet'</span>)</span><br><span class="line">    <span class="comment">// user doesn't have a device token yet</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>You can use this function to check if user open the push notification switch in user’s device.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">messaging().requestPermission().then(<span class="function">(<span class="params">response: any</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// if user click allow app push notification on pop-up，I can get token by function: </span></span><br><span class="line"></span><br><span class="line">messaging().requestPermission().then(<span class="function">(<span class="params">response: any</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!messaging().isDeviceRegisteredForRemoteMessages) &#123;</span><br><span class="line">        messaging().registerDeviceForRemoteMessages()</span><br><span class="line">      &#125;</span><br><span class="line">      messaging().getToken()</span><br><span class="line">        .then(<span class="function"><span class="params">fcmToken</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (fcmToken) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">              <span class="keyword">this</span>.iosTokenNetWork(fcmToken)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.androidTokenNetWork(fcmToken)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.warn(<span class="string">'user doesn t have a device token yet'</span>)</span><br><span class="line">            <span class="comment">// user doesn't have a device token yet</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>You can click Push notification and go to another page when the App is in the background.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">messaging().setBackgroundMessageHandler(<span class="keyword">async</span> remoteMessage =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (remoteMessage) &#123;</span><br><span class="line">          appsFlyer.trackEvent(<span class="string">"Open_notification"</span>)</span><br><span class="line">          analytics().logEvent(<span class="string">'Open_notification'</span>, &#123;</span><br><span class="line">            value: <span class="string">''</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="keyword">if</span> (remoteMessage.data.send_user_history_id) &#123;</span><br><span class="line">            <span class="keyword">this</span>.pushRequest(remoteMessage.data.send_user_history_id)</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (remoteMessage.data.url === <span class="string">"MixMatch"</span>) &#123;  </span><br><span class="line">              <span class="keyword">this</span>.props.navigation.push(<span class="string">'MyClosetDetailPage'</span>, &#123;</span><br><span class="line">                product_id: remoteMessage.data.push_id,</span><br><span class="line">                returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">              &#125;)</span><br><span class="line">  </span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (remoteMessage.data.url === <span class="string">"StreetSnap"</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">this</span>.props.navigation.navigate(<span class="string">'PushlookbookStreetSnapPage'</span>, &#123;</span><br><span class="line">                streetId: remoteMessage.data.push_id,</span><br><span class="line">                returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;, <span class="number">500</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>You can click Push notification and go to another page when the App is closed</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">messaging()</span><br><span class="line">      .getInitialNotification()</span><br><span class="line">      .then(<span class="function"><span class="params">remoteMessage</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (remoteMessage) &#123;</span><br><span class="line">          appsFlyer.trackEvent(<span class="string">"Open_notification"</span>)</span><br><span class="line">          analytics().logEvent(<span class="string">'Open_notification'</span>, &#123;</span><br><span class="line">            value: <span class="string">''</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="comment">// alert(JSON.stringify(remoteMessage) )</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (remoteMessage.data.url === <span class="string">"MixMatch"</span>) &#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.props.navigation.push(<span class="string">'MyClosetDetailPage'</span>, &#123;</span><br><span class="line">                  product_id: remoteMessage.data.push_id,</span><br><span class="line">                  returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125;, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (remoteMessage.data.url === <span class="string">"StreetSnap"</span>) &#123;</span><br><span class="line">              <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.props.navigation.navigate(<span class="string">'PushlookbookStreetSnapPage'</span>, &#123;</span><br><span class="line">                  streetId: remoteMessage.data.push_id,</span><br><span class="line">                  returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125;, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Create-Notification-Service-Extension"><a href="#Create-Notification-Service-Extension" class="headerlink" title="Create Notification Service Extension"></a>Create Notification Service Extension</h3><p>If I want to send an iOS Push Notification with picture to my iPhone, I have to add the iOS Push Notification with Notification Service Extension.</p><ol><li>In the Xcode menu, go to File &gt; New &gt; Target.</li><li>Select the Notification Service Extension.</li><li>Gives the name the Extension service and click the finish button.</li></ol><p>and enable Push Notification and App Group capabilities in iOS App target.</p><p>NotificationService.h</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UserNotifications/UserNotifications.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NotificationService</span> : <span class="title">UNNotificationServiceExtension</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>NotificationService.m<br><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"NotificationService.h"</span></span></span><br><span class="line"><span class="keyword">@import</span> Firebase;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NotificationService</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="keyword">void</span> (^contentHandler)(UNNotificationContent *contentToDeliver);</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) UNMutableNotificationContent *bestAttemptContent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NotificationService</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)didReceiveNotificationRequest:(UNNotificationRequest *)request withContentHandler:(<span class="keyword">void</span> (^)(UNNotificationContent * _Nonnull))contentHandler &#123;</span><br><span class="line">    <span class="keyword">self</span>.contentHandler = contentHandler;</span><br><span class="line">    <span class="keyword">self</span>.bestAttemptContent = [request.content mutableCopy];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Modify the notification content here...</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>.bestAttemptContent.title) &#123;</span><br><span class="line">    <span class="keyword">self</span>.bestAttemptContent.title = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, <span class="keyword">self</span>.bestAttemptContent.title];</span><br><span class="line">  &#125;</span><br><span class="line">  [[FIRMessaging extensionHelper] populateNotificationContent:<span class="keyword">self</span>.bestAttemptContent</span><br><span class="line">  withContentHandler:contentHandler];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)serviceExtensionTimeWillExpire &#123;</span><br><span class="line">    <span class="comment">// Called just before the extension will be terminated by the system.</span></span><br><span class="line">    <span class="comment">// Use this as an opportunity to deliver your "best attempt" at modified content, otherwise the original push payload will be used.</span></span><br><span class="line">    <span class="keyword">self</span>.contentHandler(<span class="keyword">self</span>.bestAttemptContent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><h3 id="The-format-of-Push-Notification-Service-be-sent-by-Server"><a href="#The-format-of-Push-Notification-Service-be-sent-by-Server" class="headerlink" title="The format of Push Notification Service be sent by Server"></a>The format of Push Notification Service be sent by Server</h3><p>The content of data can be added or deleted with costume way. if your android device click the push notification bar, and then the app is not opened, the problem must be caused by the format of Push Notification Service. iOS as well.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;message&quot;: &#123;</span><br><span class="line">    &quot;notification&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;title&quot;,</span><br><span class="line">      &quot;body&quot;: &quot;message content&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;token&quot;: &quot;fi7FrXMCFeQ:APA91bEZ3CCZEu6NJCzPNyOXq3QoGuCgZ_NZ6pSkuvAYM-VKTvfj1FbnBQKimHaOVqWv_4FD_eGZn1CcfNRf2Ve6X4_mYNwmgI99A1ngxcnY6oyjXTcNRsdIh7YD3SizhRHoTbIXcn-8&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">      &quot;image_url&quot;: &quot;&quot;,</span><br><span class="line">      &quot;push_type&quot;: &quot;0&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;0&quot;,</span><br><span class="line">      &quot;url&quot;: &quot;MixMatch&quot;,</span><br><span class="line">      &quot;push_id&quot;: &quot;6587588&quot;,</span><br><span class="line">      &quot;send_user_history_id&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;apns&quot;: &#123;</span><br><span class="line">      &quot;headers&quot;: &#123;</span><br><span class="line">        &quot;apns-priority&quot;: &quot;10&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;payload&quot;: &#123;</span><br><span class="line">        &quot;aps&quot;: &#123;</span><br><span class="line">          &quot;badge&quot;: 1,</span><br><span class="line">          &quot;mutable-content&quot;: 1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;fcm_options&quot;: &#123;</span><br><span class="line">        &quot;image&quot;: &quot;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Detecting-that-notification-is-open-or-closed-when-app-is-in-foreground-or-background"><a href="#Detecting-that-notification-is-open-or-closed-when-app-is-in-foreground-or-background" class="headerlink" title="Detecting that notification is open or closed when app is in foreground or background."></a>Detecting that notification is open or closed when app is in foreground or background.</h3><p>if we need to detect when our app is coming to the foreground or when it comes to background, the AppState will help me to do it so easy:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> NotificationManager <span class="keyword">from</span> <span class="string">'react-native-check-notification-enable'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">        loginShow: <span class="literal">false</span>,</span><br><span class="line">        loginStatus: <span class="literal">false</span>,</span><br><span class="line">        isEnabled: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.flage = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentDidMount() &#123;</span><br><span class="line">    AppState.addEventListener(<span class="string">'change'</span>,<span class="keyword">this</span>._handleAppStateChange)</span><br><span class="line">    <span class="keyword">this</span>._navListener = <span class="keyword">this</span>.props.navigation.addListener(<span class="string">'didFocus'</span>, () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">        messaging().requestPermission().then(<span class="function">(<span class="params">response: any</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (response === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                    isEnabled: <span class="literal">true</span></span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                    isEnabled: <span class="literal">false</span></span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        NotificationManager.areNotificationsEnabled().then(<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e === <span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                    isEnabled: <span class="literal">true</span></span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                    isEnabled: <span class="literal">false</span></span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;).catch(<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                isEnabled: <span class="literal">false</span></span><br><span class="line">            &#125;))</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_handleAppStateChange = <span class="function">(<span class="params">nextAppState</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (nextAppState != <span class="literal">null</span> &amp;&amp; nextAppState === <span class="string">'active'</span>) &#123;</span><br><span class="line">        <span class="comment">//如果是true ，表示从后台进入了前台 ，请求数据，刷新页面。或者做其他的逻辑</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.flage) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">                messaging().requestPermission().then(<span class="function">(<span class="params">response: any</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (response === <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">true</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">false</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                NotificationManager.areNotificationsEnabled().then(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e === <span class="literal">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">true</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">false</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                        isEnabled: <span class="literal">false</span></span><br><span class="line">                    &#125;))</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.flage = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nextAppState != <span class="literal">null</span> &amp;&amp; nextAppState === <span class="string">'background'</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.flage = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_handleAppStateChange = <span class="function">(<span class="params">nextAppState</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (nextAppState != <span class="literal">null</span> &amp;&amp; nextAppState === <span class="string">'active'</span>) &#123;</span><br><span class="line">        <span class="comment">//如果是true ，表示从后台进入了前台 ，请求数据，刷新页面。或者做其他的逻辑</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.flage) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">                messaging().requestPermission().then(<span class="function">(<span class="params">response: any</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (response === <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">true</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">false</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                NotificationManager.areNotificationsEnabled().then(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e === <span class="literal">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">true</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                            isEnabled: <span class="literal">false</span></span><br><span class="line">                        &#125;))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">                        isEnabled: <span class="literal">false</span></span><br><span class="line">                    &#125;))</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.flage = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nextAppState != <span class="literal">null</span> &amp;&amp; nextAppState === <span class="string">'background'</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.flage = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;How to add Push Notification in your project? I use firebase to send cloud message by Push Notification. First of all you click the websi
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - React-native-image-crop-picker</title>
    <link href="http://leviduan.com/2020/01/10/2020-01-10/"/>
    <id>http://leviduan.com/2020/01/10/2020-01-10/</id>
    <published>2020-01-10T01:40:02.000Z</published>
    <updated>2020-04-29T09:33:47.482Z</updated>
    
    <content type="html"><![CDATA[<p>Have a function to upload your picture to find similar items about your dress, I find some similar React Native Library with support for camera, multiple images and cropping, however I found <code>React-native-image-crop-picker</code> is so adapt for my project.</p><p>So I use <code>React-native-image-crop-picker</code> to achieve this function, however some invisible bugs you will change the library code. I wrote it in the article.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i react-native-image-crop-picker --save</span><br><span class="line">react-native link react-native-image-crop-picker</span><br><span class="line">cd ios &amp;&amp; pod install &amp;&amp; cd ../</span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><h4 id="Select-from-gallery"><a href="#Select-from-gallery" class="headerlink" title="Select from gallery"></a>Select from gallery</h4><p>Call single image picker with cropping</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ImagePicker.openPicker(&#123;</span><br><span class="line">  width: <span class="number">300</span>,</span><br><span class="line">  height: <span class="number">400</span>,</span><br><span class="line">  cropping: <span class="literal">true</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(image);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Call multiple image picker</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ImagePicker.openPicker(&#123;</span><br><span class="line">  multiple: <span class="literal">true</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">images</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(images);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Select-from-camera"><a href="#Select-from-camera" class="headerlink" title="Select from camera"></a>Select from camera</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ImagePicker.openCamera(&#123;</span><br><span class="line">  width: <span class="number">300</span>,</span><br><span class="line">  height: <span class="number">400</span>,</span><br><span class="line">  cropping: <span class="literal">true</span>,</span><br><span class="line">&#125;).then(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(image);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Crop-picture"><a href="#Crop-picture" class="headerlink" title="Crop picture"></a>Crop picture</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ImagePicker.openCropper(&#123;</span><br><span class="line">  path: <span class="string">'my-file-path.jpg'</span>,</span><br><span class="line">  width: <span class="number">300</span>,</span><br><span class="line">  height: <span class="number">400</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(image);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h3><p>When I use <code>ImagePicker.openPicker</code> in Android device，I can modify width and height to 1200/1600 as 3:4 ,I saw poor image quality using 300x400, when I upped it to 1200x1600 the quality greatly improved. I’d say the solution is to set a greater height/width, Android can do it very well, but if you use iPhone, when you upped it to 1200x1600 the picture, you found you cropped the area will be error area.</p><p>In Android it is working properly and I’m able to crop the image. However, on iOS the crop is not properly cropping the required region.</p><p>So how to resolve it?</p><p>We will open Xcode,  and search the path:  Pods - Development Pods - RNImageCropPicker - ImageCropPicker.m</p><p>We find the func : </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">imageCropViewController:(RSKImageCropViewController *)controller</span><br><span class="line">                   didCropImage:(UIImage *)croppedImage</span><br><span class="line">                  usingCropRect:(CGRect)cropRect</span><br></pre></td></tr></table></figure><p>and we will change code to delete compressImage void and then the picture will not be compressed, or you can compressed your code by yourself to write OC code.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CGSize desiredImageSize = CGSizeMake([[[self options] objectForKey:@&quot;width&quot;] intValue],</span><br><span class="line">                                         [[[self options] objectForKey:@&quot;height&quot;] intValue]);</span><br><span class="line">UIImage *resizedImage = [croppedImage resizedImageToFitInSize:desiredImageSize scaleIfSmaller:YES];</span><br><span class="line">+ ImageResult *imageResult = [self.compression compressImage:croppedImage withOptions:self.options];</span><br><span class="line">-  ImageResult *imageResult = [self.compression compressImage:resizedImage withOptions:self.options];</span><br></pre></td></tr></table></figure><p>I change the iOS Library. it is the whole function changed:</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)imageCropViewController:(RSKImageCropViewController *)controller</span><br><span class="line">                   didCropImage:(<span class="built_in">UIImage</span> *)croppedImage</span><br><span class="line">                  usingCropRect:(<span class="built_in">CGRect</span>)cropRect &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we have correct rect, but not correct dimensions</span></span><br><span class="line">    <span class="comment">// so resize image</span></span><br><span class="line">    <span class="built_in">CGSize</span> desiredImageSize = <span class="built_in">CGSizeMake</span>([[[<span class="keyword">self</span> options] objectForKey:<span class="string">@"width"</span>] intValue],</span><br><span class="line">                                         [[[<span class="keyword">self</span> options] objectForKey:<span class="string">@"height"</span>] intValue]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIImage</span> *resizedImage = [croppedImage resizedImageToFitInSize:desiredImageSize scaleIfSmaller:<span class="literal">YES</span>];</span><br><span class="line">    ImageResult *imageResult = [<span class="keyword">self</span>.compression compressImage:croppedImage withOptions:<span class="keyword">self</span>.options];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSString</span> *filePath = [<span class="keyword">self</span> persistFile:imageResult.data];</span><br><span class="line">    <span class="keyword">if</span> (filePath == <span class="literal">nil</span>) &#123;</span><br><span class="line">        [<span class="keyword">self</span> dismissCropper:controller selectionDone:<span class="literal">YES</span> completion:[<span class="keyword">self</span> waitAnimationEnd:^&#123;</span><br><span class="line">            <span class="keyword">self</span>.reject(ERROR_CANNOT_SAVE_IMAGE_KEY, ERROR_CANNOT_SAVE_IMAGE_MSG, <span class="literal">nil</span>);</span><br><span class="line">        &#125;]];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDictionary</span>* exif = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span>([[<span class="keyword">self</span>.options objectForKey:<span class="string">@"includeExif"</span>] boolValue]) &#123;</span><br><span class="line">        exif = [[<span class="built_in">CIImage</span> imageWithData:imageResult.data] properties];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span> dismissCropper:controller selectionDone:<span class="literal">YES</span> completion:[<span class="keyword">self</span> waitAnimationEnd:^&#123;</span><br><span class="line">        <span class="keyword">self</span>.resolve([<span class="keyword">self</span> createAttachmentResponse:filePath</span><br><span class="line">                                           withExif: exif</span><br><span class="line">                                      withSourceURL: <span class="keyword">self</span>.croppingFile[<span class="string">@"sourceURL"</span>]</span><br><span class="line">                                withLocalIdentifier: <span class="keyword">self</span>.croppingFile[<span class="string">@"localIdentifier"</span>]</span><br><span class="line">                                       withFilename: <span class="keyword">self</span>.croppingFile[<span class="string">@"filename"</span>]</span><br><span class="line">                                          withWidth:imageResult.width</span><br><span class="line">                                         withHeight:imageResult.height</span><br><span class="line">                                           withMime:imageResult.mime</span><br><span class="line">                                           withSize:[<span class="built_in">NSNumber</span> numberWithUnsignedInteger:imageResult.data.length]</span><br><span class="line">                                           withData:[[<span class="keyword">self</span>.options objectForKey:<span class="string">@"includeBase64"</span>] boolValue] ? [imageResult.data base64EncodedStringWithOptions:<span class="number">0</span>] : <span class="literal">nil</span></span><br><span class="line">                                           withRect:cropRect</span><br><span class="line">                                   withCreationDate:<span class="keyword">self</span>.croppingFile[<span class="string">@"creationDate"</span>]</span><br><span class="line">                               withModificationDate:<span class="keyword">self</span>.croppingFile[<span class="string">@"modificationDate"</span>]</span><br><span class="line">                      ]);</span><br><span class="line">    &#125;]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And then, you will keep the width and height: 300 / 400 at iOS Platform, it will work well. Now you have solved this question. You can write just like this.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">    ImagePicker.openPicker(&#123;</span><br><span class="line">      width: <span class="number">300</span>,</span><br><span class="line">      height: <span class="number">400</span>,</span><br><span class="line">      compressImageQuality: <span class="number">1.0</span>,</span><br><span class="line">      cropping: <span class="literal">true</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.props.navigation.push(<span class="string">'LooksUploadImagePage'</span>, &#123;</span><br><span class="line">        imageUrl: image.path,</span><br><span class="line">        returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">        takePhoto: <span class="keyword">this</span>.takePhoto,</span><br><span class="line">        isCamera: <span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    ImagePicker.openPicker(&#123;</span><br><span class="line">      width: <span class="number">1200</span>,</span><br><span class="line">      height: <span class="number">1600</span>,</span><br><span class="line">      compressImageQuality: <span class="number">1.0</span>,</span><br><span class="line">      cropping: <span class="literal">true</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.props.navigation.push(<span class="string">'LooksUploadImagePage'</span>, &#123;</span><br><span class="line">        imageUrl: image.path,</span><br><span class="line">        returnPage: <span class="string">'Tabs'</span>,</span><br><span class="line">        takePhoto: <span class="keyword">this</span>.takePhoto,</span><br><span class="line">        isCamera: <span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Have a function to upload your picture to find similar items about your dress, I find some similar React Native Library with support for 
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - contentContainerStyle (Flatlist)</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-11/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-11/</id>
    <published>2020-01-08T14:53:02.000Z</published>
    <updated>2020-04-29T09:33:47.479Z</updated>
    
    <content type="html"><![CDATA[<p>contentContainerStyle </p><p>Flatlist <code>style</code> defines the outer container of the Flatlist, e.g its height and relations to siblings elements</p><p>Flatlist <code>contentContainerStyle</code> defines the inner container of it, e.g items alignments, padding, etc</p><p>Just like this :</p><p><img src="https://i.stack.imgur.com/CDm8y.png" alt="img"></p><p>You can use <code>marginHorizontal: 10</code> to hold the offset between two picture in renderItem. but you can’t get the offset between picture and left edge. So the best solution is contentContainerStyle can be set this offset to resolve the question.</p><p><img src="/images/15784951633891.png" alt></p><p>Show my code:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatarListFlatList = props =&gt; &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;View style=&#123;&#123;width: ScreenUtil.screenW, height: 106, marginTop: 17&#125;&#125;&gt;</span><br><span class="line">        &lt;FlatList</span><br><span class="line">          showsHorizontalScrollIndicator=&#123;false&#125;</span><br><span class="line">          showsVerticalScrollIndicator=&#123;false&#125;</span><br><span class="line">          data=&#123;props&#125;</span><br><span class="line">          contentContainerStyle=&#123;&#123;paddingLeft: 10, paddingRight: 10&#125;&#125;</span><br><span class="line">          keyExtractor=&#123;(item, index) =&gt; index.toString()&#125;</span><br><span class="line">          renderItem=&#123;(&#123;item&#125;) =&gt; this.avatarListFlatListItem(item)&#125;</span><br><span class="line">          horizontal=&#123;true&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/View&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">avatarListFlatListItem = props =&gt; &#123;</span><br><span class="line">    let randomColor = () =&gt; &#123;</span><br><span class="line">      var r = Math.floor(Math.random() * 256);</span><br><span class="line">      var g = Math.floor(Math.random() * 256);</span><br><span class="line">      var b = Math.floor(Math.random() * 256);</span><br><span class="line">      return `rgba($&#123;r&#125;,$&#123;g&#125;,$&#123;b&#125;,0.5)`;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    const colorStyles = &#123;</span><br><span class="line">      backgroundColor: randomColor(),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">      &lt;View style=&#123;&#123;height: 106, marginVertical: 0, marginHorizontal: 10&#125;&#125;&gt;</span><br><span class="line">        &lt;TouchableOpacity</span><br><span class="line">          activeOpacity=&#123;1.0&#125;</span><br><span class="line">          onPress=&#123;() =&gt;</span><br><span class="line">            this.props.navigation.push(&apos;LookbookStarPage&apos;, &#123;</span><br><span class="line">              data: props.influencer_id,</span><br><span class="line">              returnPage: &apos;Tabs&apos;,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;&gt;</span><br><span class="line">          &lt;Image</span><br><span class="line">            source=&#123;&#123;uri: props.avatar_local_path&#125;&#125;</span><br><span class="line">            style=&#123;[</span><br><span class="line">              &#123;</span><br><span class="line">                width: 80,</span><br><span class="line">                height: 80,</span><br><span class="line">                borderRadius: 40,</span><br><span class="line">              &#125;,</span><br><span class="line">              colorStyles,</span><br><span class="line">            ]&#125;&gt;&lt;/Image&gt;</span><br><span class="line"></span><br><span class="line">          &lt;Text</span><br><span class="line">            numberOfLines=&#123;1&#125;</span><br><span class="line">            style=&#123;&#123;</span><br><span class="line">              fontSize: 16,</span><br><span class="line">              width: 80,</span><br><span class="line">              fontFamily: &apos;HelveticaNeue&apos;,</span><br><span class="line">              color: &apos;#000000&apos;,</span><br><span class="line">              marginTop: 8,</span><br><span class="line">              textAlign: &apos;center&apos;,</span><br><span class="line">            &#125;&#125;&gt;</span><br><span class="line">            &#123;props.display_name&#125;</span><br><span class="line">          &lt;/Text&gt;</span><br><span class="line">        &lt;/TouchableOpacity&gt;</span><br><span class="line">      &lt;/View&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;contentContainerStyle &lt;/p&gt;
&lt;p&gt;Flatlist &lt;code&gt;style&lt;/code&gt; defines the outer container of the Flatlist, e.g its height and relations to si
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - react-native-share</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-10/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-10/</id>
    <published>2020-01-08T14:51:02.000Z</published>
    <updated>2020-04-29T09:33:47.478Z</updated>
    
    <content type="html"><![CDATA[<p>When we use share function, the best library is react-native-share. React Native Share, a simple tool for share message and file to other apps.</p><p>Git website: <a href="https://github.com/react-native-community/react-native-share/" target="_blank" rel="noopener">https://github.com/react-native-community/react-native-share/</a></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install react-native-share --save</span><br><span class="line"></span><br><span class="line">react-native link react-native-share</span><br><span class="line"></span><br><span class="line">cd ios &amp;&amp; pod install &amp;&amp; cd ../</span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Share <span class="keyword">from</span> <span class="string">'react-native-share'</span>;</span><br><span class="line"></span><br><span class="line">Share.open(options)</span><br><span class="line">.then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="built_in">console</span>.log(res) &#125;)</span><br><span class="line">.catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123; err &amp;&amp; <span class="built_in">console</span>.log(err); &#125;);</span><br><span class="line"></span><br><span class="line">Share.open(&#123;<span class="attr">url</span> : ScreenUtil.webUrl + <span class="string">'/streetsnapShareToPhoto?id='</span> + <span class="keyword">this</span>.state.data.id, <span class="attr">message</span>: <span class="string">"Deja"</span>&#125;)</span><br><span class="line">.then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="built_in">console</span>.warn(res) &#125;)</span><br><span class="line">.catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123; err &amp;&amp; <span class="built_in">console</span>.warn(err); &#125;);</span><br></pre></td></tr></table></figure><p>Supported options:</p><table><thead><tr><th style="text-align:left">Name</th><th style="text-align:center">Type</th><th style="text-align:left">Description</th></tr></thead><tbody><tr><td style="text-align:left">url</td><td style="text-align:center">string</td><td style="text-align:left">URL you want to share (only support base64 string in iOS &amp; Android).</td></tr><tr><td style="text-align:left">urls</td><td style="text-align:center">Array[string]</td><td style="text-align:left">array of base64 string you want to share (only support iOS &amp; Android).</td></tr><tr><td style="text-align:left">type</td><td style="text-align:center">string</td><td style="text-align:left">File mime type (optional)</td></tr><tr><td style="text-align:left">message</td><td style="text-align:center">string</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">title</td><td style="text-align:center">string</td><td style="text-align:left">(optional)</td></tr><tr><td style="text-align:left">subject</td><td style="text-align:center">string</td><td style="text-align:left">(optional)</td></tr><tr><td style="text-align:left">email</td><td style="text-align:center">string</td><td style="text-align:left">Email of addressee (optional)</td></tr><tr><td style="text-align:left">excludedActivityTypes</td><td style="text-align:center">string</td><td style="text-align:left">(optional)</td></tr><tr><td style="text-align:left">failOnCancel</td><td style="text-align:center">boolean</td><td style="text-align:left">(defaults to true) Specifies whether promise should reject if user cancels share dialog (optional)</td></tr><tr><td style="text-align:left">showAppsToView</td><td style="text-align:center">boolean</td><td style="text-align:left">(optional) only android</td></tr><tr><td style="text-align:left">filename</td><td style="text-align:center">string</td><td style="text-align:left">only support base64 string in Android</td></tr></tbody></table><p>These can be assessed using Share.Social property For eg.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Share <span class="keyword">from</span> <span class="string">'react-native-share'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shareOptions = &#123;</span><br><span class="line">    title: <span class="string">'Share via'</span>,</span><br><span class="line">    message: <span class="string">'some message'</span>,</span><br><span class="line">    url: <span class="string">'some share url'</span>,</span><br><span class="line">    social: Share.Social.WHATSAPP,</span><br><span class="line">    whatsAppNumber: <span class="string">"9199999999"</span>  <span class="comment">// country code + phone number(currently only works on Android)</span></span><br><span class="line">    filename: <span class="string">'test'</span> , <span class="comment">// only for base64 file in Android </span></span><br><span class="line">&#125;;</span><br><span class="line">Share.shareSingle(shareOptions);</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">Name</th><th style="text-align:center">Android</th><th style="text-align:left">iOS</th><th style="text-align:left">Windows</th></tr></thead><tbody><tr><td style="text-align:left"><strong>FACEBOOK</strong></td><td style="text-align:center">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>PAGESMANAGER</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>WHATSAPP</strong></td><td style="text-align:center">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>INSTAGRAM</strong></td><td style="text-align:center">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>GOOGLEPLUS</strong></td><td style="text-align:center">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>EMAIL</strong></td><td style="text-align:center">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>PINTEREST</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>SMS</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>SNAPCHAT</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>MESSENGER</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left"><strong>LINKEDIN</strong></td><td style="text-align:center">yes</td><td style="text-align:left">no</td><td style="text-align:left">no</td></tr></tbody></table><h4 id="React-native-share-library-question-Currently-on-iOS-13-the-app-will-crash"><a href="#React-native-share-library-question-Currently-on-iOS-13-the-app-will-crash" class="headerlink" title="React native share library question - Currently on iOS 13 the app will crash"></a>React native share library question - Currently on iOS 13 the app will crash</h4><p>Currently on iOS 13 the app will crash if you:</p><ul><li>Open the share sheet</li><li>Tap something like messages or photos</li><li>Cancel the dialog</li><li>Perform any other action</li></ul><p>This is because shareController.completionWithItemsHandler is called when the dialog box is canceled and currently failureCallback or successCallback will always be called. In the situation above, activityError is nil so successCallback will be called even though completed is false. This leaves us in a state where the callback has been invoked but the ShareSheet is still active, meaning the success or error callback will be invoked again, leading to the crash.</p><p>This PR adds a check to make sure completed is true before calling successCallback. This way successCallback will only be called when the user has successfully completed an action and the ShareSheet is closed.</p><p>Only call successCallback when completed is true (iOS 13 crash)</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">shareController.completionWithItemsHandler = ^(<span class="built_in">NSString</span> *activityType, <span class="built_in">BOOL</span> completed, __unused <span class="built_in">NSArray</span> *returnedItems, <span class="built_in">NSError</span> *activityError) &#123;</span><br><span class="line">    <span class="keyword">if</span> (activityError) &#123;</span><br><span class="line">        failureCallback(activityError);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (completed) &#123;</span><br><span class="line">        successCallback(@[@(completed), RCTNullIfNil(activityType)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When we use share function, the best library is react-native-share. React Native Share, a simple tool for share message and file to other
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - DeviceEventEmitter API</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-9/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-9/</id>
    <published>2020-01-08T14:50:02.000Z</published>
    <updated>2020-04-29T09:33:47.481Z</updated>
    
    <content type="html"><![CDATA[<p>We usually use Notification in iOS just like this:</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">NotificationCenter</span>.<span class="keyword">default</span>.addObserver(<span class="keyword">self</span>, selector: #selector(forYouRecommendUpdate), name: <span class="type">Notification</span>.<span class="type">Name</span>(rawValue: kDJForYouVCReloadAll), object: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="type">NotificationCenter</span>.<span class="keyword">default</span>.post(name: <span class="type">Notification</span>.<span class="type">Name</span>(rawValue: kDJForYouVCReloadAll), object: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><p>However, how to use a Notification in React native? The best way that we achieve it by <code>DeviceEventEmitter</code></p><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p>Page A to register a Notification</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  &#123;DeviceEventEmitter&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line">DeviceEventEmitter.emit(<span class="string">'xxxName’,param);</span></span><br></pre></td></tr></table></figure><p>Page B to post a Notification</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">componentDidMount()&#123;</span><br><span class="line">    <span class="keyword">this</span>.listener =DeviceEventEmitter.addListener(<span class="string">'xxxName'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//  use param do something</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentWillUnmount()&#123;</span><br><span class="line">  <span class="keyword">this</span>.listener.remove();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// we need to remove the listener by componentWillUnmount</span></span><br></pre></td></tr></table></figure><p>This simple version</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注册事件通知</span></span><br><span class="line"><span class="keyword">let</span> param = <span class="string">'test'</span></span><br><span class="line">DeviceEventEmitter.emit(<span class="string">'testName'</span>,param);</span><br><span class="line">DeviceEventEmitter.emit(<span class="string">'event.test'</span>, &#123;&#125;);</span><br><span class="line"><span class="comment">//testName:通知的名称 param：发送的消息（传参）</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We usually use Notification in iOS just like this:&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - My ScreenUtil Library</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-8/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-8/</id>
    <published>2020-01-08T14:50:01.000Z</published>
    <updated>2020-04-29T09:33:47.481Z</updated>
    
    <content type="html"><![CDATA[<p><code>ScreenUtil.js</code> is my tool JS file, you can use it simple. just like:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> ScreenUtil <span class="keyword">from</span> <span class="string">'../../ScreenUtil'</span>;</span><br><span class="line"></span><br><span class="line">style=&#123;&#123;</span><br><span class="line">  width: ScreenUtil.screenW,</span><br><span class="line">  height: ((ScreenUtil.screenW - <span class="number">42</span>) / <span class="number">2.0</span> / <span class="number">3.0</span>) * <span class="number">4.0</span>,</span><br><span class="line">  borderRadius: <span class="number">5</span>,</span><br><span class="line">  overflow: <span class="string">'hidden'</span>,</span><br><span class="line">&#125;&#125;&gt;</span><br></pre></td></tr></table></figure><p>You can use this file by copying this code.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 屏幕工具类 以及一些常用的工具类封装</span></span><br><span class="line"><span class="comment"> * ui设计基准,iphone 6 2倍图</span></span><br><span class="line"><span class="comment"> * width:750px</span></span><br><span class="line"><span class="comment"> * height:1334px</span></span><br><span class="line"><span class="comment"> * @2x</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  PixelRatio,</span><br><span class="line">  Dimensions,</span><br><span class="line">  Platform,</span><br><span class="line">  AsyncStorage</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> screenW = Dimensions.get(<span class="string">'window'</span>).width;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> screenH = Dimensions.get(<span class="string">'window'</span>).height;</span><br><span class="line"><span class="keyword">const</span> fontScale = PixelRatio.getFontScale();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> pixelRatio = PixelRatio.get();</span><br><span class="line"><span class="comment">//像素密度</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DEFAULT_DENSITY = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//px转换成dp</span></span><br><span class="line"><span class="comment">//以iphone6为基准,如果以其他尺寸为基准的话,请修改下面的defaultWidth和defaultHeight为对应尺寸即可. 以下为1倍图时</span></span><br><span class="line"><span class="keyword">const</span> defaultWidth = <span class="number">375</span>;</span><br><span class="line"><span class="keyword">const</span> defaultHeight = <span class="number">667</span>;</span><br><span class="line"><span class="keyword">const</span> w2 = defaultWidth / DEFAULT_DENSITY;</span><br><span class="line"><span class="comment">//px转换成dp</span></span><br><span class="line"><span class="keyword">const</span> h2 = defaultHeight / DEFAULT_DENSITY;</span><br><span class="line"></span><br><span class="line"><span class="comment">//缩放比例</span></span><br><span class="line"><span class="keyword">const</span> _scaleWidth = screenW / defaultWidth;</span><br><span class="line"><span class="keyword">const</span> _scaleHeight = screenH / defaultHeight;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iPhoneX</span></span><br><span class="line"><span class="keyword">const</span> X_WIDTH = <span class="number">375</span>;</span><br><span class="line"><span class="keyword">const</span> X_HEIGHT = <span class="number">812</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> web_DT = <span class="string">'https://dt.xx.co/'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> web_DP = <span class="string">'https://dp.xx.co'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> web_PR = <span class="string">'https://xx.co'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> webUrl = web_PR</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 屏幕适配,缩放size , 默认根据宽度适配，纵向也可以使用此方法</span></span><br><span class="line"><span class="comment">* 横向的尺寸直接使用此方法</span></span><br><span class="line"><span class="comment">* 如：width ,paddingHorizontal ,paddingLeft ,paddingRight ,marginHorizontal ,marginLeft ,marginRight</span></span><br><span class="line"><span class="comment">* @param size 设计图的尺寸</span></span><br><span class="line"><span class="comment">* @returns &#123;number&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">scaleSize</span>(<span class="params">size: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> size * _scaleWidth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 屏幕适配 , 纵向的尺寸使用此方法应该会更趋近于设计稿</span></span><br><span class="line"><span class="comment">* 如：height ,paddingVertical ,paddingTop ,paddingBottom ,marginVertical ,marginTop ,marginBottom</span></span><br><span class="line"><span class="comment">* @param size 设计图的尺寸</span></span><br><span class="line"><span class="comment">* @returns &#123;number&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">scaleHeight</span>(<span class="params">size: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> size * _scaleHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 最初版本尺寸适配方案 也许你会更喜欢这个</span></span><br><span class="line"><span class="comment">export function scaleSize(size: Number) &#123;</span></span><br><span class="line"><span class="comment">  let scaleWidth = screenW / w2;</span></span><br><span class="line"><span class="comment">  let scaleHeight = screenH / h2;</span></span><br><span class="line"><span class="comment">  let scale = Math.min(scaleWidth, scaleHeight);</span></span><br><span class="line"><span class="comment">  size = Math.round((size * scale + 0.5));</span></span><br><span class="line"><span class="comment">  return size / DEFAULT_DENSITY;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 设置字体的size（单位px）</span></span><br><span class="line"><span class="comment">* @param size 传入设计稿上的px , allowFontScaling 是否根据设备文字缩放比例调整，默认不会</span></span><br><span class="line"><span class="comment">* @returns &#123;Number&#125; 返回实际sp</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setSpText</span>(<span class="params">size: Number, allowFontScaling = false</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> scale = <span class="built_in">Math</span>.min(_scaleWidth, _scaleHeight);</span><br><span class="line">  <span class="keyword">const</span> fontSize = allowFontScaling ? <span class="number">1</span> : fontScale;</span><br><span class="line">  <span class="keyword">return</span> size * scale / fontSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setSpText2</span>(<span class="params">size: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> scaleWidth = screenW / w2;</span><br><span class="line">  <span class="keyword">let</span> scaleHeight = screenH / h2;</span><br><span class="line">  <span class="keyword">let</span> scale = <span class="built_in">Math</span>.min(scaleWidth, scaleHeight);</span><br><span class="line">  size = <span class="built_in">Math</span>.round((size * scale + <span class="number">0.5</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> size / DEFAULT_DENSITY * fontScale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 判断是否为iphoneX</span></span><br><span class="line"><span class="comment">* @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">isIphoneX</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">      Platform.OS === <span class="string">'ios'</span> &amp;&amp;</span><br><span class="line">      ((screenH === X_HEIGHT &amp;&amp; screenW === X_WIDTH) ||</span><br><span class="line">          (screenH === X_WIDTH &amp;&amp; screenW === X_HEIGHT))</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据是否是iPhoneX返回不同的样式</span></span><br><span class="line"><span class="comment">* @param iphoneXStyle</span></span><br><span class="line"><span class="comment">* @param iosStyle</span></span><br><span class="line"><span class="comment">* @param androidStyle</span></span><br><span class="line"><span class="comment">* @returns &#123;*&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">ifIphoneX</span>(<span class="params">iphoneXStyle, iosStyle = &#123;&#125;, androidStyle</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (isIphoneX()) &#123;</span><br><span class="line">      <span class="keyword">return</span> iphoneXStyle;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> iosStyle</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (androidStyle) <span class="keyword">return</span> androidStyle;</span><br><span class="line">      <span class="keyword">return</span> iosStyle</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 判断对象，数组，字符串是否为空</span></span><br><span class="line"><span class="comment">* @param str  (null|undefined|''|'   '|[]|&#123;&#125;) 均判断为空，返回true</span></span><br><span class="line"><span class="comment">* @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">isEmpty</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!str) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> str === <span class="string">'object'</span> &amp;&amp; <span class="built_in">Object</span>.keys(str).length === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">""</span>).length === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//时间处理</span></span><br><span class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params">format</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> date = &#123;</span><br><span class="line">      <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>,</span><br><span class="line">      <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(),</span><br><span class="line">      <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(),</span><br><span class="line">      <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(),</span><br><span class="line">      <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(),</span><br><span class="line">      <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),</span><br><span class="line">      <span class="string">"S+"</span>: <span class="keyword">this</span>.getMilliseconds()</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/(y+)/i</span>.test(format)) &#123;</span><br><span class="line">      format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">''</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> date) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(format)) &#123;</span><br><span class="line">          format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, <span class="built_in">RegExp</span>.$<span class="number">1.</span>length === <span class="number">1</span></span><br><span class="line">              ? date[k] : (<span class="string">"00"</span> + date[k]).substr((<span class="string">""</span> + date[k]).length));</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> format;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取时间差 current:1497235409744 当前时间  start:1497235419744 开始时间</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getRemainingime</span>(<span class="params">current: Number, start: Number</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> time = start - current;</span><br><span class="line">  <span class="keyword">if</span> (time &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> [<span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> year = <span class="built_in">Math</span>.floor(time / (<span class="number">365</span> * <span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//年</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> month = <span class="built_in">Math</span>.floor(time / (<span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//月</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> days = <span class="built_in">Math</span>.floor(time / (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//日</span></span><br><span class="line">  <span class="keyword">let</span> temp1 = time % (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> temp2 = temp1 % (<span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> minutes = <span class="built_in">Math</span>.floor(temp2 / (<span class="number">60</span> * <span class="number">1000</span>));<span class="comment">//分</span></span><br><span class="line">  <span class="keyword">let</span> hours = <span class="built_in">Math</span>.floor(temp1 / (<span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//时</span></span><br><span class="line">  <span class="keyword">let</span> temp3 = temp2 % (<span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> seconds = <span class="built_in">Math</span>.round(temp3 / <span class="number">1000</span>);<span class="comment">//秒</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> strs = [year, toNormal(month), toNormal(days), toNormal(hours), toNormal(minutes), toNormal(seconds)];</span><br><span class="line">  <span class="keyword">return</span> strs;<span class="comment">//["0", "0", "2", "7", "33", "30"]0年0月2日 7时33分30秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1497235419</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getRemainingimeDistance</span>(<span class="params">distance: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> time = distance * <span class="number">1000</span>;</span><br><span class="line">  <span class="keyword">if</span> (time &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> [<span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>, <span class="string">"0"</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> year = <span class="built_in">Math</span>.floor(time / (<span class="number">365</span> * <span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//年</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> month = <span class="built_in">Math</span>.floor(time / (<span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//月</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> days = <span class="built_in">Math</span>.floor(time / (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//日</span></span><br><span class="line">  <span class="keyword">let</span> temp1 = time % (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> hours = <span class="built_in">Math</span>.floor(temp1 / (<span class="number">3600</span> * <span class="number">1000</span>));<span class="comment">//时</span></span><br><span class="line">  <span class="keyword">let</span> temp2 = temp1 % (<span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> minutes = <span class="built_in">Math</span>.floor(temp2 / (<span class="number">60</span> * <span class="number">1000</span>));<span class="comment">//分</span></span><br><span class="line">  <span class="keyword">let</span> temp3 = temp2 % (<span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> seconds = <span class="built_in">Math</span>.round(temp3 / <span class="number">1000</span>);<span class="comment">//秒</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> strs = [year, toNormal(month), toNormal(days), toNormal(hours), toNormal(minutes), toNormal(seconds)];</span><br><span class="line">  <span class="comment">// strs.splice(0, 1, String(Number(strs[0]) - 1970));//年</span></span><br><span class="line">  <span class="comment">// strs.splice(1, 1, String(Number(strs[1]) - 1));</span></span><br><span class="line">  <span class="comment">// strs.splice(2, 1, (Number(strs[2]) - 1) &lt; 10 ? '0' + (Number(strs[2]) - 1) : String(Number(strs[2]) - 1));</span></span><br><span class="line">  <span class="comment">// strs.splice(3, 1, (Number(strs[3]) - 8) &lt; 10 ? '0' + (Number(strs[3]) - 8) : String(Number(strs[3]) - 8));</span></span><br><span class="line">  <span class="comment">// strs.splice(4, 1, Number(strs[4]) &lt; 10 ? '0' + Number(strs[4]) : String(Number(strs[4])));</span></span><br><span class="line">  <span class="comment">// strs.splice(5, 1, Number(strs[5]) &lt; 10 ? '0' + Number(strs[5]) : String(Number(strs[5])));</span></span><br><span class="line">  <span class="keyword">return</span> strs;<span class="comment">//["0", "0", "2", "7", "33", "30"]0年0月2日 7时33分30秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">toNormal</span>(<span class="params">time: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> time &gt;= <span class="number">10</span> ? time : <span class="string">'0'</span> + time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换成日期</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">toDate</span>(<span class="params">timestamp: Number, format1 = <span class="string">'yyyy-MM-dd hh:mm:ss'</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (timestamp &gt; <span class="number">10000</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">          date.setTime(timestamp);</span><br><span class="line">          <span class="keyword">return</span> date.format(format1);<span class="comment">//2014-07-10 10:21:12</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (erro) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换成时间搓</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">toTimestamp</span>(<span class="params">date: String</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timestamp = <span class="built_in">Date</span>.parse(date);</span><br><span class="line">  <span class="keyword">return</span> timestamp / <span class="number">1000</span>;  <span class="comment">// 1497233827569/1000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CST时间=&gt;转换成日期yyyy-MM-dd hh:mm:ss</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getTaskTime</span>(<span class="params">strDate</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">null</span> == strDate || <span class="string">""</span> == strDate) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> dateStr = strDate.trim().split(<span class="string">" "</span>);</span><br><span class="line">  <span class="keyword">let</span> strGMT = dateStr[<span class="number">0</span>] + <span class="string">" "</span> + dateStr[<span class="number">1</span>] + <span class="string">" "</span> + dateStr[<span class="number">2</span>] + <span class="string">" "</span> + dateStr[<span class="number">5</span>] + <span class="string">" "</span> + dateStr[<span class="number">3</span>] + <span class="string">" GMT+0800"</span>;</span><br><span class="line">  <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.parse(strGMT));</span><br><span class="line">  <span class="keyword">let</span> y = date.getFullYear();</span><br><span class="line">  <span class="keyword">let</span> m = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">  m = m &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + m) : m;</span><br><span class="line">  <span class="keyword">let</span> d = date.getDate();</span><br><span class="line">  d = d &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + d) : d;</span><br><span class="line">  <span class="keyword">let</span> h = date.getHours();</span><br><span class="line">  <span class="keyword">let</span> minute = date.getMinutes();</span><br><span class="line">  minute = minute &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + minute) : minute;</span><br><span class="line">  <span class="keyword">let</span> second = date.getSeconds();</span><br><span class="line">  second = second &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + second) : second;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> y + <span class="string">"-"</span> + m + <span class="string">"-"</span> + d + <span class="string">" "</span> + h + <span class="string">":"</span> + minute + <span class="string">":"</span> + second;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1497235419</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getRemainingimeDistance2</span>(<span class="params">distance: Number</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> time = distance;</span><br><span class="line">  <span class="keyword">let</span> days = <span class="built_in">Math</span>.floor(time / (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>));</span><br><span class="line">  <span class="keyword">let</span> temp1 = time % (<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> hours = <span class="built_in">Math</span>.floor(temp1 / (<span class="number">3600</span> * <span class="number">1000</span>));</span><br><span class="line">  <span class="keyword">let</span> temp2 = temp1 % (<span class="number">3600</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> minutes = <span class="built_in">Math</span>.floor(temp2 / (<span class="number">60</span> * <span class="number">1000</span>));</span><br><span class="line">  <span class="keyword">if</span> (time &lt;= <span class="number">60</span> * <span class="number">1000</span>) &#123;</span><br><span class="line">      minutes = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> temp3 = temp2 % (<span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> seconds = <span class="built_in">Math</span>.round(temp3 / <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">return</span> [hours, minutes];<span class="comment">//["0", "0", "2", "7", "33", "30"]0年0月2日 7时33分30秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 存储</span></span><br><span class="line"><span class="comment">* @param key</span></span><br><span class="line"><span class="comment">* @param value</span></span><br><span class="line"><span class="comment">* @param successCallback</span></span><br><span class="line"><span class="comment">* @param errorCallback</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">saveAsyncStorage</span>(<span class="params">key, value, successCallback, errorCallback</span>) </span>&#123;</span><br><span class="line">  AsyncStorage.setItem(key, value, error =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          errorCallback(error);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">          successCallback();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 取值</span></span><br><span class="line"><span class="comment">* @param key</span></span><br><span class="line"><span class="comment">* @param successCallback</span></span><br><span class="line"><span class="comment">* @param errorCallback</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getAsyncStorage</span>(<span class="params">key, successCallback, errorCallback</span>) </span>&#123;</span><br><span class="line">  AsyncStorage.getItem(key, (error, result) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          errorCallback(error);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">          successCallback(result);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除对应key的</span></span><br><span class="line"><span class="comment">* @param key</span></span><br><span class="line"><span class="comment">* @param successCallback</span></span><br><span class="line"><span class="comment">* @param errorCallback</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">removeAsyncStorage</span>(<span class="params">key, successCallback, errorCallback</span>) </span>&#123;</span><br><span class="line">  AsyncStorage.getItem(key, error =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          errorCallback(error);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">          successCallback();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;ScreenUtil.js&lt;/code&gt; is my tool JS file, you can use it simple. just like:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;c
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native network library - Axios</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-7/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-7/</id>
    <published>2020-01-08T14:49:01.000Z</published>
    <updated>2020-04-29T09:33:47.481Z</updated>
    
    <content type="html"><![CDATA[<p>How to use axios in React Native</p><h3 id="Axios-Interceptors"><a href="#Axios-Interceptors" class="headerlink" title="Axios Interceptors"></a>Axios Interceptors</h3><p>Axios interceptors allow us to run code or modify the request and response before the request and response is started.</p><p>In simple words, it allows you write or execute a piece of your code before the request gets sent.</p><h3 id="Write-into-a-file-to-package-Axios"><a href="#Write-into-a-file-to-package-Axios" class="headerlink" title="Write into a file to package Axios"></a>Write into a file to package Axios</h3><p>The simple example: </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"></span><br><span class="line">axios.defaults.retry = <span class="number">4</span>;</span><br><span class="line">axios.defaults.timeout = <span class="number">10000</span>;</span><br><span class="line">axios.defaults.headers.common[<span class="string">'x-dejafashion-ua'</span>] = <span class="string">' '</span></span><br><span class="line">axios.defaults.headers.common[<span class="string">'uid'</span>] = <span class="string">'0'</span></span><br><span class="line">axios.defaults.headers.common[<span class="string">'User-Agent'</span>] = <span class="string">'iphone ... CFNetwork/1098.7 Darwin/19.0.0'</span></span><br><span class="line"></span><br><span class="line">axios.defaults.headers.post[<span class="string">'Content-Type'</span>] = <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stylepedia_DT = <span class="string">'https://cloud-dt.co/'</span></span><br><span class="line"><span class="keyword">const</span> stylepedia_DP = <span class="string">'http://cloud-dp.co/'</span></span><br><span class="line"><span class="keyword">const</span> stylepedia_PR = <span class="string">'https://cloud.co/'</span></span><br><span class="line"></span><br><span class="line">axios.interceptors.response.use(<span class="literal">undefined</span>, <span class="function"><span class="keyword">function</span> <span class="title">axiosRetryInterceptor</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = err.config;</span><br><span class="line">  <span class="comment">// If config does not exist or the retry option is not set, reject</span></span><br><span class="line">  <span class="keyword">if</span>(!config || !config.retry) <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Set the variable for keeping track of the retry count</span></span><br><span class="line">  config.__retryCount = config.__retryCount || <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Check if we've maxed out the total number of retries</span></span><br><span class="line">  <span class="keyword">if</span>(config.__retryCount &gt;= config.retry) &#123;</span><br><span class="line">      <span class="comment">// Reject with the error</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Increase the retry count</span></span><br><span class="line">  config.__retryCount += <span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Create new promise to handle exponential backoff</span></span><br><span class="line">  <span class="keyword">var</span> backoff = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          resolve();</span><br><span class="line">      &#125;, config.retryDelay || <span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Return the promise in which recalls axios to retry the request</span></span><br><span class="line">  <span class="keyword">return</span> backoff.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> axios(config);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> axios.create(&#123;</span><br><span class="line">  baseURL: stylepedia_DP</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="You-can-use-this-file-to-send-a-Get-request"><a href="#You-can-use-this-file-to-send-a-Get-request" class="headerlink" title="You can use this file to send a Get request"></a>You can use this file to send a Get request</h3><p>if you want bring params, don’t forget to use <code>params</code> dictionary to add params</p><p>For example:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> API <span class="keyword">from</span> <span class="string">'../../Network/api'</span></span><br><span class="line"></span><br><span class="line">    searchInfluencersRequest() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            influencerLoading: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        API.get(<span class="string">'search/influencers'</span>, &#123;</span><br><span class="line">            params: &#123;</span><br><span class="line">                key: <span class="keyword">this</span>.state.searchText,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        </span><br><span class="line">            <span class="keyword">if</span> (res.data.ret === <span class="number">0</span> &amp;&amp; res.data.data !== <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    influencerArray: res.data.data.infuencer_item_list,</span><br><span class="line">                    influencerLoading: <span class="literal">false</span>,</span><br><span class="line">                &#125;)             </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123; </span><br><span class="line">                    influencerArray: [],</span><br><span class="line">                    influencerLoading: <span class="literal">false</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                influencerArray: [],</span><br><span class="line">                influencerLoading: <span class="literal">false</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="You-can-use-this-file-to-send-a-Post-request"><a href="#You-can-use-this-file-to-send-a-Post-request" class="headerlink" title="You can use this file to send a Post request"></a>You can use this file to send a Post request</h3><p>Send a Post request, the way is really similar to Get request</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">likeStatusRequest(likeStatus, street_id) &#123;</span><br><span class="line">    API.post(<span class="string">'favourite/favourite_status'</span>, &#123;</span><br><span class="line">      street_id: street_id,</span><br><span class="line">      like: likeStatus ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">      .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        likeStatus</span><br><span class="line">          ? Toast.show(<span class="string">'Added to Favourites'</span>, &#123;</span><br><span class="line">              position: Toast.positions.CENTER,</span><br><span class="line">            &#125;)</span><br><span class="line">          : Toast.show(<span class="string">'Removed from Favourites'</span>, &#123;</span><br><span class="line">              position: Toast.positions.CENTER,</span><br><span class="line">            &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="Sometimes-you-want-change-defaults-header"><a href="#Sometimes-you-want-change-defaults-header" class="headerlink" title="Sometimes you want change defaults header"></a>Sometimes you want change defaults header</h3><p>You can do it like this:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">API.defaults.headers.common[<span class="string">'uid'</span>] = global.uid;</span><br><span class="line">API.defaults.headers.common[<span class="string">'sig'</span>] = global.sig;</span><br></pre></td></tr></table></figure><h3 id="How-to-send-an-image-to-server？"><a href="#How-to-send-an-image-to-server？" class="headerlink" title="How to send an image to server？"></a>How to send an image to server？</h3><p>You need to new a FormData to add your image path 、image type and image rename.</p><p>don’t forget to change your ‘Content-Type’ headers.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">uploadImageRequest() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="keyword">let</span> file = &#123;<span class="attr">uri</span>: ../.../levi.png, <span class="attr">type</span>: <span class="string">'multipart/form-data'</span>, <span class="attr">name</span>: <span class="string">'image.png'</span>&#125;;   </span><br><span class="line">    formData.append(<span class="string">"file"</span>,file);  </span><br><span class="line">    <span class="keyword">let</span> config = &#123;</span><br><span class="line">        headers:&#123;<span class="string">'Content-Type'</span>:<span class="string">'multipart/form-data'</span>&#125;</span><br><span class="line">    &#125;; </span><br><span class="line">    API.post(<span class="string">'customer/upload'</span>,formData,config)</span><br><span class="line">      .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            imageResponseUrl: res.data.url,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            isLookLoading: <span class="literal">false</span>,</span><br><span class="line">            noRequest: <span class="literal">false</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;How to use axios in React Native&lt;/p&gt;
&lt;h3 id=&quot;Axios-Interceptors&quot;&gt;&lt;a href=&quot;#Axios-Interceptors&quot; class=&quot;headerlink&quot; title=&quot;Axios Intercepto
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - ActionSheetIOS</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-6/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-6/</id>
    <published>2020-01-08T14:48:01.000Z</published>
    <updated>2020-04-29T09:33:47.481Z</updated>
    
    <content type="html"><![CDATA[<p>Sometime, We need to make a actionsheet on Rect native，so the best way to do it by ActionSheetIOS API from react-native, however, ActionSheetIOS can not be used in Android mobile. so we need an unofficial library from github to achieve an Android ActionSheet UI.</p><p>choosing the github library from <code>beefe/react-native-actionsheet</code></p><p>website: <a href="https://github.com/beefe/react-native-actionsheet/" target="_blank" rel="noopener">https://github.com/beefe/react-native-actionsheet/</a></p><p>Cross platform ActionSheet, This component implements a custom ActionSheet and provides the same way to drawing it on the different platforms (iOS and Android). Actually, In order to keep the best effect, it still uses the ActionSheetIOS on iOS.</p><p><img src="https://raw.githubusercontent.com/beefe/react-native-actionsheet/master/docs/ios-native.png" alt="iOS png"></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>npm install react-native-actionsheet –save</p><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ActionSheet <span class="keyword">from</span> <span class="string">'react-native-actionsheet'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  showActionSheet = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.ActionSheet.show()</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;Text onPress=&#123;<span class="keyword">this</span>.showActionSheet&#125;&gt;Open ActionSheet&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ActionSheet</span></span><br><span class="line"><span class="regexp">          ref=&#123;o =&gt; this.ActionSheet = o&#125;</span></span><br><span class="line"><span class="regexp">          title=&#123;'Which one do you like ?'&#125;</span></span><br><span class="line"><span class="regexp">          options=&#123;['Apple', 'Banana', 'cancel']&#125;</span></span><br><span class="line"><span class="regexp">          cancelButtonIndex=&#123;2&#125;</span></span><br><span class="line"><span class="regexp">          destructiveButtonIndex=&#123;1&#125;</span></span><br><span class="line"><span class="regexp">          onPress=&#123;(index) =&gt; &#123; /</span>* <span class="keyword">do</span> something *<span class="regexp">/ &#125;&#125;</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="My-Example"><a href="#My-Example" class="headerlink" title="My Example"></a>My Example</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ActionSheet <span class="keyword">from</span> <span class="string">'react-native-actionsheet'</span></span><br><span class="line"></span><br><span class="line">showActionSheet = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.ActionSheet.show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">componentDidMount() &#123;</span><br><span class="line">    <span class="keyword">this</span>.props.navigation.setParams(&#123; <span class="attr">increaseCount</span>: <span class="keyword">this</span>.showActionSheet &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;ActionSheet</span><br><span class="line">      ref=&#123;o =&gt; <span class="keyword">this</span>.ActionSheet = o&#125;</span><br><span class="line">      options=&#123;[<span class="string">'Similar items'</span>, <span class="string">'Similar looks'</span>, <span class="string">'Cancel'</span>]&#125;</span><br><span class="line">      cancelButtonIndex=&#123;<span class="number">2</span>&#125;</span><br><span class="line">      destructiveButtonIndex=&#123;<span class="number">5</span>&#125;</span><br><span class="line">      onPress=&#123;(index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (index === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.props.navigation.setParams(&#123; <span class="attr">otherParam</span>: <span class="string">'Similar items'</span> &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (index === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.props.navigation.setParams(&#123; <span class="attr">otherParam</span>: <span class="string">'Similar looks'</span> &#125;)</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                similarLooks: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            () =&gt; &#123;</span><br><span class="line">                <span class="comment">// do something in here</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h3><p>If you don’t need the destructive ( red font ), you should write code <code>destructiveButtonIndex={value}</code> the value that you didn’t write in the options.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sometime, We need to make a actionsheet on Rect native，so the best way to do it by ActionSheetIOS API from react-native, however, ActionS
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - AsyncStorage</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-5/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-5/</id>
    <published>2020-01-08T14:48:01.000Z</published>
    <updated>2020-04-29T09:33:47.481Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes we have to use some ways to save data to the disk. Just like login status, React Native Async Storage is an asynchronous, unencrypted, persistent, key-value storage system for React Native, It’s used for a variety of scenarios but mainly to store data when your app is not using any cloud services, or when you want to implement features in your app that require data storage.</p><p>As a React Native developer, you have to know what these limitations are. One limitation of an AsyncStorage API is that on Android the size of the database is set to a default of 6MB limit. Also, AsyncStorage storage is based on SQLite.</p><p>On iOS, AsyncStorage is backed by native code that stores small values in a Serialized dictionary and larger values in separate files. On Android, AsyncStorage will use either RocksDB or SQLite based on what is available.</p><p>Thus, it’s important to keep SQLite limitations in mind, too. Also, it’s hard to store complex and nested data structures in the form of key-value pairs. Knowing about these limitations will help you to opt for the best solution when developing a mobile app.</p><p>I write some simple example for using AsyncStorage Library.</p><p>Github website: <a href="https://github.com/react-native-community/async-storage" target="_blank" rel="noopener">https://github.com/react-native-community/async-storage</a></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add @react-native-community/async-storage</span><br><span class="line">react-native link @react-native-community/async-storage</span><br><span class="line"></span><br><span class="line">cd ios/ &amp;&amp; pod install</span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><h4 id="Store-data"><a href="#Store-data" class="headerlink" title="Store data"></a>Store data</h4><p>The function is going to save the data. In the below snippet, you’ll find that it uses a parameter name, which, on success, is the value that’s stored. An alert message will be shown when the input data is saved.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">storeData = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> AsyncStorage.setItem(<span class="string">'@storage_Key'</span>, <span class="string">'stored value'</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="comment">// saving error</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">save = <span class="keyword">async</span> name =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> AsyncStorage.setItem(STORAGE_KEY, name)</span><br><span class="line">      alert(<span class="string">'Data successfully saved!'</span>)</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123; name &#125;)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      alert(<span class="string">'Failed to save name.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="Read-data"><a href="#Read-data" class="headerlink" title="Read data"></a>Read data</h4><p>There are three asynchronous methods that will help to store the data, retrieve the data, and clear the app data that are stored. Each of these methods is going to utilize the appropriate API method from the AsyncStorage API. Every method in the AsyncStorage API is promise-based; hence, let’s use async/await syntax to follow best practices.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">getData = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> value = <span class="keyword">await</span> AsyncStorage.getItem(<span class="string">'@storage_Key'</span>)</span><br><span class="line">    <span class="keyword">if</span>(value !== <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="comment">// value previously stored</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">    <span class="comment">// error reading value</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">retrieveData = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> name = <span class="keyword">await</span> AsyncStorage.getItem(STORAGE_KEY)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (name !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123; name &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      alert(<span class="string">'Failed to load name.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="Remove-Everything"><a href="#Remove-Everything" class="headerlink" title="Remove Everything"></a>Remove Everything</h4><p>you are going to utilize from the AsyncStorage API is called clear(). This deletes everything that is previously saved. It is not recommended to use this method directly if you want to delete only a specific item from the storage. </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">removeEverything = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> AsyncStorage.clear()</span><br><span class="line">      alert(<span class="string">'Storage successfully cleared!'</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      alert(<span class="string">'Failed to clear the async storage.'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>Mostly I use it store global object , for example:</p><p>the global object file:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">global.js</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> global = &#123;</span><br><span class="line">    authorization: <span class="literal">null</span>,</span><br><span class="line">    token:<span class="string">''</span>,</span><br><span class="line">    uid: <span class="number">0</span>,</span><br><span class="line">    sig: <span class="string">''</span>,</span><br><span class="line">    name: <span class="string">''</span>,</span><br><span class="line">    avatar: <span class="string">''</span>,</span><br><span class="line">    email: <span class="string">''</span>,</span><br><span class="line">    loginStatus: <span class="literal">false</span>,</span><br><span class="line">    emailFillText: <span class="string">''</span>,</span><br><span class="line">    cacheArray: [],</span><br><span class="line">    historyArray: [],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">module</span>.exports = global;</span><br></pre></td></tr></table></figure><p>I read global data by this way: </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> AsyncStorage <span class="keyword">from</span> <span class="string">'@react-native-community/async-storage'</span>;</span><br><span class="line"></span><br><span class="line">AsyncStorage.getItem(<span class="string">'@global'</span>, (errs, result) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!errs) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result !== <span class="literal">null</span>) &#123;</span><br><span class="line">          <span class="keyword">var</span> jsonValue = <span class="built_in">JSON</span>.parse(result);</span><br><span class="line">          <span class="keyword">let</span> global = <span class="built_in">require</span>(<span class="string">'../../../global'</span>);</span><br><span class="line">          global.uid = jsonValue.uid;</span><br><span class="line">          global.sig = jsonValue.sig;</span><br><span class="line">          global.name = jsonValue.name;</span><br><span class="line">          global.avatar = jsonValue.avatar;</span><br><span class="line">          global.email = jsonValue.email;</span><br><span class="line">          global.loginStatus = jsonValue.loginStatus;</span><br><span class="line">          global.cacheArray = jsonValue.cacheArray;</span><br><span class="line">          global.emailFillText =  jsonValue.emailFillText</span><br><span class="line">          global.historyArray = jsonValue.historyArray</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.requestGuestNetwork();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.requestGuestNetwork();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>I store data by this way: </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> global = <span class="built_in">require</span>(<span class="string">'../../../global'</span>);</span><br><span class="line">global.uid = res.data.uid ? res.data.uid : <span class="number">0</span>;</span><br><span class="line">global.sig = <span class="string">''</span>;</span><br><span class="line">global.name = <span class="string">''</span>;</span><br><span class="line">global.email = <span class="string">''</span>;</span><br><span class="line">global.avatar = <span class="string">''</span>;</span><br><span class="line">global.loginStatus = <span class="literal">false</span>;</span><br><span class="line">API.defaults.headers.common[<span class="string">'uid'</span>] = global.uid;</span><br><span class="line">API.defaults.headers.common[<span class="string">'sig'</span>] = global.sig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonStr = <span class="built_in">JSON</span>.stringify(global);</span><br><span class="line"></span><br><span class="line">AsyncStorage.setItem(<span class="string">'@global'</span>, jsonStr, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>That’s all</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sometimes we have to use some ways to save data to the disk. Just like login status, React Native Async Storage is an asynchronous, unenc
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native network library - Axios</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-4/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-4/</id>
    <published>2020-01-08T14:47:04.000Z</published>
    <updated>2020-04-29T09:33:47.480Z</updated>
    
    <content type="html"><![CDATA[<p>How to use axios in React Native</p><h3 id="Axios-Interceptors"><a href="#Axios-Interceptors" class="headerlink" title="Axios Interceptors"></a>Axios Interceptors</h3><p>Axios interceptors allow us to run code or modify the request and response before the request and response is started.</p><p>In simple words, it allows you write or execute a piece of your code before the request gets sent.</p><h3 id="Write-into-a-file-to-package-Axios"><a href="#Write-into-a-file-to-package-Axios" class="headerlink" title="Write into a file to package Axios"></a>Write into a file to package Axios</h3><p>The simple example: </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"></span><br><span class="line">axios.defaults.retry = <span class="number">4</span>;</span><br><span class="line">axios.defaults.timeout = <span class="number">10000</span>;</span><br><span class="line">axios.defaults.headers.common[<span class="string">'x-dejafashion-ua'</span>] = <span class="string">' '</span></span><br><span class="line">axios.defaults.headers.common[<span class="string">'uid'</span>] = <span class="string">'0'</span></span><br><span class="line">axios.defaults.headers.common[<span class="string">'User-Agent'</span>] = <span class="string">'iphone ... CFNetwork/1098.7 Darwin/19.0.0'</span></span><br><span class="line"></span><br><span class="line">axios.defaults.headers.post[<span class="string">'Content-Type'</span>] = <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stylepedia_DT = <span class="string">'https://cloud-dt.co/'</span></span><br><span class="line"><span class="keyword">const</span> stylepedia_DP = <span class="string">'http://cloud-dp.co/'</span></span><br><span class="line"><span class="keyword">const</span> stylepedia_PR = <span class="string">'https://cloud.co/'</span></span><br><span class="line"></span><br><span class="line">axios.interceptors.response.use(<span class="literal">undefined</span>, <span class="function"><span class="keyword">function</span> <span class="title">axiosRetryInterceptor</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = err.config;</span><br><span class="line">  <span class="comment">// If config does not exist or the retry option is not set, reject</span></span><br><span class="line">  <span class="keyword">if</span>(!config || !config.retry) <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Set the variable for keeping track of the retry count</span></span><br><span class="line">  config.__retryCount = config.__retryCount || <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Check if we've maxed out the total number of retries</span></span><br><span class="line">  <span class="keyword">if</span>(config.__retryCount &gt;= config.retry) &#123;</span><br><span class="line">      <span class="comment">// Reject with the error</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Increase the retry count</span></span><br><span class="line">  config.__retryCount += <span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Create new promise to handle exponential backoff</span></span><br><span class="line">  <span class="keyword">var</span> backoff = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          resolve();</span><br><span class="line">      &#125;, config.retryDelay || <span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Return the promise in which recalls axios to retry the request</span></span><br><span class="line">  <span class="keyword">return</span> backoff.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> axios(config);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> axios.create(&#123;</span><br><span class="line">  baseURL: stylepedia_DP</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="You-can-use-this-file-to-send-a-Get-request"><a href="#You-can-use-this-file-to-send-a-Get-request" class="headerlink" title="You can use this file to send a Get request"></a>You can use this file to send a Get request</h3><p>if you want bring params, don’t forget to use <code>params</code> dictionary to add params</p><p>For example:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> API <span class="keyword">from</span> <span class="string">'../../Network/api'</span></span><br><span class="line"></span><br><span class="line">    searchInfluencersRequest() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            influencerLoading: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        API.get(<span class="string">'search/influencers'</span>, &#123;</span><br><span class="line">            params: &#123;</span><br><span class="line">                key: <span class="keyword">this</span>.state.searchText,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        </span><br><span class="line">            <span class="keyword">if</span> (res.data.ret === <span class="number">0</span> &amp;&amp; res.data.data !== <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    influencerArray: res.data.data.infuencer_item_list,</span><br><span class="line">                    influencerLoading: <span class="literal">false</span>,</span><br><span class="line">                &#125;)             </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123; </span><br><span class="line">                    influencerArray: [],</span><br><span class="line">                    influencerLoading: <span class="literal">false</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                influencerArray: [],</span><br><span class="line">                influencerLoading: <span class="literal">false</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="You-can-use-this-file-to-send-a-Post-request"><a href="#You-can-use-this-file-to-send-a-Post-request" class="headerlink" title="You can use this file to send a Post request"></a>You can use this file to send a Post request</h3><p>Send a Post request, the way is really similar to Get request</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">likeStatusRequest(likeStatus, street_id) &#123;</span><br><span class="line">    API.post(<span class="string">'favourite/favourite_status'</span>, &#123;</span><br><span class="line">      street_id: street_id,</span><br><span class="line">      like: likeStatus ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">      .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        likeStatus</span><br><span class="line">          ? Toast.show(<span class="string">'Added to Favourites'</span>, &#123;</span><br><span class="line">              position: Toast.positions.CENTER,</span><br><span class="line">            &#125;)</span><br><span class="line">          : Toast.show(<span class="string">'Removed from Favourites'</span>, &#123;</span><br><span class="line">              position: Toast.positions.CENTER,</span><br><span class="line">            &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="Sometimes-you-want-change-defaults-header"><a href="#Sometimes-you-want-change-defaults-header" class="headerlink" title="Sometimes you want change defaults header"></a>Sometimes you want change defaults header</h3><p>You can do it like this:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">API.defaults.headers.common[<span class="string">'uid'</span>] = global.uid;</span><br><span class="line">API.defaults.headers.common[<span class="string">'sig'</span>] = global.sig;</span><br></pre></td></tr></table></figure><h3 id="How-to-send-an-image-to-server？"><a href="#How-to-send-an-image-to-server？" class="headerlink" title="How to send an image to server？"></a>How to send an image to server？</h3><p>You need to new a FormData to add your image path 、image type and image rename.</p><p>don’t forget to change your ‘Content-Type’ headers.</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">uploadImageRequest() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="keyword">let</span> file = &#123;<span class="attr">uri</span>: ../.../levi.png, <span class="attr">type</span>: <span class="string">'multipart/form-data'</span>, <span class="attr">name</span>: <span class="string">'image.png'</span>&#125;;   </span><br><span class="line">    formData.append(<span class="string">"file"</span>,file);  </span><br><span class="line">    <span class="keyword">let</span> config = &#123;</span><br><span class="line">        headers:&#123;<span class="string">'Content-Type'</span>:<span class="string">'multipart/form-data'</span>&#125;</span><br><span class="line">    &#125;; </span><br><span class="line">    API.post(<span class="string">'customer/upload'</span>,formData,config)</span><br><span class="line">      .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            imageResponseUrl: res.data.url,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            isLookLoading: <span class="literal">false</span>,</span><br><span class="line">            noRequest: <span class="literal">false</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;How to use axios in React Native&lt;/p&gt;
&lt;h3 id=&quot;Axios-Interceptors&quot;&gt;&lt;a href=&quot;#Axios-Interceptors&quot; class=&quot;headerlink&quot; title=&quot;Axios Intercepto
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React native - Search bar</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-3/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-3/</id>
    <published>2020-01-08T14:47:02.000Z</published>
    <updated>2020-04-29T09:33:47.480Z</updated>
    
    <content type="html"><![CDATA[<p>If you want to use SearchBar on React Native, the best choice is React Native Elements Library. you can use SearchBar module from React Native Elements.</p><p>The website: <a href="https://react-native-elements.github.io/react-native-elements/docs/input.html" target="_blank" rel="noopener">https://react-native-elements.github.io/react-native-elements/docs/input.html</a></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>Step 1: Install react-native-elements</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">yarn add react-native-elements</span><br><span class="line"># or with npm</span><br><span class="line">npm install react-native-elements</span><br></pre></td></tr></table></figure><p>Step 2: Install react-native-vector-icons</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># yarn</span><br><span class="line">yarn add react-native-vector-icons</span><br><span class="line"># or with npm</span><br><span class="line">npm i --save react-native-vector-icons</span><br><span class="line"></span><br><span class="line"># link</span><br><span class="line">react-native link react-native-vector-icons</span><br></pre></td></tr></table></figure><p>Ps: if Xcode run error - react-native-vector-icons iOS run error - ‘Multiple commands produce’ error when building with new Xcode build system</p><p>The solution way : <strong>simply remove duplicate reference fonts in “Copy Bundle Resources” NOT in “[CP] Copy Pods Resources”</strong></p><p>You can correct to run iOS app.</p><h3 id="How-to-use-search-bar-on-RN"><a href="#How-to-use-search-bar-on-RN" class="headerlink" title="How to use search bar on RN"></a>How to use search bar on RN</h3><p>You can write the SearchBar Label to write a UI code like this: </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; SearchBar &#125; <span class="keyword">from</span> <span class="string">'react-native-elements'</span>;</span><br><span class="line"></span><br><span class="line">&lt;SearchBar</span><br><span class="line">    inputContainerStyle=&#123;&#123;<span class="attr">backgroundColor</span>: <span class="string">'#EFEFEF'</span>&#125;&#125;</span><br><span class="line">    inputStyle=&#123;&#123;<span class="attr">backgroundColor</span>: <span class="string">'#EFEFEF'</span>&#125;&#125;</span><br><span class="line">    ref=&#123;search =&gt; (<span class="keyword">this</span>.search = search)&#125;</span><br><span class="line">    platform=<span class="string">"ios"</span></span><br><span class="line">    containerStyle=&#123;&#123;<span class="attr">backgroundColor</span>: <span class="string">'white'</span>&#125;&#125;</span><br><span class="line">    placeholder=<span class="string">"Search"</span></span><br><span class="line">    showCancel=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">    searchIcon=&#123;<span class="literal">false</span>&#125;</span><br><span class="line">    onChangeText=&#123;searchText =&gt;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;searchText&#125;, () =&gt; &#123;</span><br><span class="line">        <span class="keyword">this</span>.searchTypeGetRequest();</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    value=&#123;<span class="keyword">this</span>.state.searchText&#125;</span><br><span class="line">    cancelButtonProps=&#123;&#123;<span class="attr">color</span>: <span class="string">'black'</span>&#125;&#125;</span><br><span class="line">    onCancel=&#123;() =&gt; &#123;</span><br><span class="line">      <span class="keyword">this</span>.props.navigation.goBack();</span><br><span class="line">    &#125;&#125;</span><br><span class="line">    returnKeyType=<span class="string">"search"</span></span><br><span class="line">    onFocus=&#123;() =&gt; &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">        LookbookStreetSnapFlatList: <span class="literal">false</span>,</span><br><span class="line">      &#125;));</span><br><span class="line">    &#125;&#125;</span><br><span class="line">    onClear=&#123;() =&gt; &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">        LookbookStreetSnapFlatList: <span class="literal">false</span>,</span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">this</span>.search.focus();</span><br><span class="line">    &#125;&#125;</span><br><span class="line">    onSubmitEditing=&#123;() =&gt; &#123;</span><br><span class="line">       <span class="comment">// press the search button, something will be happened</span></span><br><span class="line">    &#125;&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>If you use  <code>this.search.focus()</code>, you can find a bug when you use iOS device. when you inter the search page, you click the cancel button, the keyboard always be there and didn’t dismiss anytime. So you can use setTimeout void to avoid that action.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;SearchBar</span><br><span class="line">  ref=&#123;search =&gt; <span class="keyword">this</span>.search = search&#125;</span><br><span class="line">  ...</span><br><span class="line">/&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">  <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.search.focus();</span><br><span class="line">  &#125;, <span class="number">200</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">this</span>.search.focus();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>About the other detail , you can check the API from RN element library website: </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;If you want to use SearchBar on React Native, the best choice is React Native Elements Library. you can use SearchBar module from React N
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>Week Tips | 2019.12.23 - 2019.12.27</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-1/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-1/</id>
    <published>2020-01-08T14:30:01.000Z</published>
    <updated>2020-04-29T09:33:47.478Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Q1-Android-studio-Error-“Unsupported-Modules-Detected-Compilation-is-not-supported-for-following-modules”"><a href="#Q1-Android-studio-Error-“Unsupported-Modules-Detected-Compilation-is-not-supported-for-following-modules”" class="headerlink" title="Q1 :  Android studio Error “Unsupported Modules Detected: Compilation is not supported for following modules”"></a>Q1 :  Android studio Error “Unsupported Modules Detected: Compilation is not supported for following modules”</h4><ol><li>File -&gt; Invalidate Caches / Restart -&gt; Invalidate Caches &amp; Restart.</li><li>close Android Studio IDE and delete the <code>.idea</code> directory.</li><li>delete all .iml files</li><li>open Android Studio IDE and Sync with <code>Gradle</code>.</li></ol><h4 id="Q2-React-Native-iOS-StatusBar-background-colour-is-not-dark-in-the-dark-mode"><a href="#Q2-React-Native-iOS-StatusBar-background-colour-is-not-dark-in-the-dark-mode" class="headerlink" title="Q2 :  React Native iOS StatusBar background colour is not dark in the dark mode."></a>Q2 :  React Native iOS StatusBar background colour is not dark in the dark mode.</h4><p>we will change the file about react native library</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">RCT_ENUM_CONVERTER(<span class="built_in">UIStatusBarStyle</span>, (@&#123;</span><br><span class="line">  <span class="string">@"default"</span>: @(<span class="built_in">UIStatusBarStyleDefault</span>), </span><br><span class="line">  <span class="string">@"light-content"</span>: @(<span class="built_in">UIStatusBarStyleLightContent</span>), </span><br><span class="line">  <span class="string">@"dark-content"</span>: @(@available(iOS <span class="number">13.0</span>, *) ? <span class="built_in">UIStatusBarStyleDarkContent</span> : <span class="built_in">UIStatusBarStyleDefault</span>), </span><br><span class="line">&#125;), <span class="built_in">UIStatusBarStyleDefault</span>, integerValue);</span><br></pre></td></tr></table></figure><h4 id="Q3-React-native-share-library-question-Currently-on-iOS-13-the-app-will-crash"><a href="#Q3-React-native-share-library-question-Currently-on-iOS-13-the-app-will-crash" class="headerlink" title="Q3 : React native share library question - Currently on iOS 13 the app will crash"></a>Q3 : React native share library question - Currently on iOS 13 the app will crash</h4><p>Currently on iOS 13 the app will crash if you:</p><ul><li>Open the share sheet</li><li>Tap something like messages or photos</li><li>Cancel the dialog</li><li>Perform any other action</li></ul><p>This is because shareController.completionWithItemsHandler is called when the dialog box is canceled and currently failureCallback or successCallback will always be called. In the situation above, activityError is nil so successCallback will be called even though completed is false. This leaves us in a state where the callback has been invoked but the ShareSheet is still active, meaning the success or error callback will be invoked again, leading to the crash.</p><p>This PR adds a check to make sure completed is true before calling successCallback. This way successCallback will only be called when the user has successfully completed an action and the ShareSheet is closed.</p><p>Only call successCallback when completed is true (iOS 13 crash)</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">shareController.completionWithItemsHandler = ^(<span class="built_in">NSString</span> *activityType, <span class="built_in">BOOL</span> completed, __unused <span class="built_in">NSArray</span> *returnedItems, <span class="built_in">NSError</span> *activityError) &#123;</span><br><span class="line">    <span class="keyword">if</span> (activityError) &#123;</span><br><span class="line">        failureCallback(activityError);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (completed) &#123;</span><br><span class="line">        successCallback(@[@(completed), RCTNullIfNil(activityType)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Q4-The-question-about-React-native-share-Android-release-build-doesn’t-work-with-react-native-0-60"><a href="#Q4-The-question-about-React-native-share-Android-release-build-doesn’t-work-with-react-native-0-60" class="headerlink" title="Q4 :  The question about React native share - Android release build doesn’t work with react-native@0.60"></a>Q4 :  The question about React native share - Android release build doesn’t work with <a href="mailto:react-native@0.60" target="_blank" rel="noopener">react-native@0.60</a></h4><p>You can run <code>npx jetify</code> in the current react native directory on the terminal.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Q1-Android-studio-Error-“Unsupported-Modules-Detected-Compilation-is-not-supported-for-following-modules”&quot;&gt;&lt;a href=&quot;#Q1-Android-stud
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>Week Tips | 2019.12.30 - 2019.01.03</title>
    <link href="http://leviduan.com/2020/01/08/2020-01-08-2/"/>
    <id>http://leviduan.com/2020/01/08/2020-01-08-2/</id>
    <published>2020-01-08T14:30:01.000Z</published>
    <updated>2020-04-29T09:33:47.480Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Q1-react-native-vector-icons-iOS-run-error-‘Multiple-commands-produce’-error-when-building-with-new-Xcode-build-system"><a href="#Q1-react-native-vector-icons-iOS-run-error-‘Multiple-commands-produce’-error-when-building-with-new-Xcode-build-system" class="headerlink" title="Q1 : react-native-vector-icons iOS run error - ‘Multiple commands produce’ error when building with new Xcode build system"></a>Q1 : react-native-vector-icons iOS run error - ‘Multiple commands produce’ error when building with new Xcode build system</h4><p>The solution way : <strong>simply remove duplicate reference fonts in “Copy Bundle Resources” NOT in “[CP] Copy Pods Resources”</strong></p><p>You can correct to run iOS app.</p><p>The problem seems to be caused by the new autolinking feature in React Native 0.60 - the line use_native_modules! in ios/Podfile means when you do pod install, any pods found in node_modules are automatically linked. This means that links to all font files are added to [CP] Copy Pods Resources when you do pod install.</p><p>If you previously installed react-native-vector-icons manually by adding the font files to Copy Bundle Resources, you then get a “Multiple commands produce…” fatal build error.</p><p>So to fix the problem, just remove the font files from Copy Bundle Resources, so that they are only in [CP] Copy Pods Resources.</p><h4 id="Q2-How-can-I-insert-a-line-break-into-a-component-in-React-Native"><a href="#Q2-How-can-I-insert-a-line-break-into-a-component-in-React-Native" class="headerlink" title="Q2 : How can I insert a line break into a  component in React Native?"></a>Q2 : How can I insert a line break into a <text> component in React Native?</text></h4><p>This should do it:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;Text&gt;</span><br><span class="line">Hi~&#123;<span class="string">"\n"</span>&#125;</span><br><span class="line"><span class="keyword">this</span> is a test message.</span><br><span class="line">&lt;<span class="regexp">/Text&gt;</span></span><br></pre></td></tr></table></figure><p>{“\n”} can be used in the <text> component in React Native.</text></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Q1-react-native-vector-icons-iOS-run-error-‘Multiple-commands-produce’-error-when-building-with-new-Xcode-build-system&quot;&gt;&lt;a href=&quot;#Q1
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>2019 W1 | 9.16-9.22 | Tips Week Summary</title>
    <link href="http://leviduan.com/2019/09/19/2019-09-19-1/"/>
    <id>http://leviduan.com/2019/09/19/2019-09-19-1/</id>
    <published>2019-09-19T14:51:18.000Z</published>
    <updated>2020-04-29T09:33:47.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Q1-Make-a-drop-shadow-effect-on-a-label-in-Swift"><a href="#Q1-Make-a-drop-shadow-effect-on-a-label-in-Swift" class="headerlink" title="Q1 Make a drop shadow effect on a label in Swift"></a>Q1 Make a drop shadow effect on a label in Swift</h3><p>Show my code:</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">lazy</span> <span class="keyword">var</span> titleLabel: <span class="type">UILabel</span> = &#123;</span><br><span class="line">    <span class="keyword">let</span> titleLabel = <span class="type">UILabel</span>(frame: .zero)</span><br><span class="line">    titleLabel.textAlignment = .center</span><br><span class="line">    titleLabel.lineBreakMode = .byTruncatingTail</span><br><span class="line">    titleLabel.numberOfLines = <span class="number">2</span></span><br><span class="line">    titleLabel.font = <span class="type">DJFont</span>.boldHelveticaFont(ofSize: <span class="number">40</span>)</span><br><span class="line">    titleLabel.text = <span class="string">" "</span></span><br><span class="line">    titleLabel.textColor = <span class="type">UIColor</span>(fromHexString: <span class="string">"FFFFFF"</span>)</span><br><span class="line">    titleLabel.layer.shadowColor = <span class="type">UIColor</span>.black.cgColor</span><br><span class="line">    titleLabel.layer.shadowRadius = <span class="number">2.0</span></span><br><span class="line">    titleLabel.layer.shadowOpacity = <span class="number">0.3</span></span><br><span class="line">    titleLabel.layer.shadowOffset = <span class="type">CGSize</span>(width: <span class="number">4</span>, height: <span class="number">4</span>)</span><br><span class="line">    titleLabel.layer.masksToBounds = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> titleLabel</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><h3 id="Q2-What’s-different-between-string-utf16-count-and-string-count"><a href="#Q2-What’s-different-between-string-utf16-count-and-string-count" class="headerlink" title="Q2 What’s different between string.utf16.count and string.count?"></a>Q2 What’s different between string.utf16.count and string.count?</h3><p>if you are coding by objective-c, it’s the same, but by swift, it’s really different.</p><p>There is a good example :</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extension String &#123;</span><br><span class="line">    var length: Int &#123;</span><br><span class="line">        return self.utf16.count</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let emoji = “😆😆😆😆😆😆”</span><br><span class="line">emoji.length // return 12</span><br><span class="line">emoji.count // return 6</span><br></pre></td></tr></table></figure><p>If you print by string.utf16.count, return 12.<br>but you print by string.count, return 6.</p><p>Does you make sense?</p><h3 id="Q3-How-to-increase-line-spacing-in-UILabel-in-swift"><a href="#Q3-How-to-increase-line-spacing-in-UILabel-in-swift" class="headerlink" title="Q3 How to increase line spacing in UILabel in swift"></a>Q3 How to increase line spacing in UILabel in swift</h3><p>You can use it by label instance</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> label = <span class="type">UILabel</span>()</span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">"Levi\nCherry\nMandy\n"</span></span><br><span class="line"><span class="keyword">let</span> attrString = <span class="type">NSMutableAttributedString</span>(string: stringValue)</span><br><span class="line"><span class="keyword">var</span> style = <span class="type">NSMutableParagraphStyle</span>()</span><br><span class="line">style.lineSpacing = <span class="number">24</span> <span class="comment">// change line spacing between paragraph like 36 or 48</span></span><br><span class="line">style.minimumLineHeight = <span class="number">20</span> <span class="comment">// change line spacing between each line like 30 or 40</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Line spacing attribute</span></span><br><span class="line">attrString.addAttribute(<span class="type">NSAttributedStringKey</span>.paragraphStyle, value: style, range: <span class="type">NSRange</span>(location: <span class="number">0</span>, length: stringValue.characters.<span class="built_in">count</span>))</span><br><span class="line"></span><br><span class="line">label.attributedText = attrString</span><br></pre></td></tr></table></figure><h3 id="Q4-No-Accounts-with-iTunes-Connect-have-been-found-for-the-Team"><a href="#Q4-No-Accounts-with-iTunes-Connect-have-been-found-for-the-Team" class="headerlink" title="Q4 No Accounts with iTunes Connect have been found for the Team?"></a>Q4 No Accounts with iTunes Connect have been found for the Team?</h3><p>I am going to submit my App to App Store, but I am getting the error:</p><p>“No accounts with iTunes Connect access have been found for the team…”</p><p>And I resolved by stackoverflow:</p><p>Quit Xcode completely and re-open it to resolve the problem.</p><p>Or</p><ol><li>Please verify if it’s App Store distribution profile or not.</li><li>If yes then try to login to Xcode with your apple Id which has access to iTunes Connect or App Store Connect.</li><li>While validating the archive file please choose the same profile. It should work fine.</li></ol><p>I resolved it by first way.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Q1-Make-a-drop-shadow-effect-on-a-label-in-Swift&quot;&gt;&lt;a href=&quot;#Q1-Make-a-drop-shadow-effect-on-a-label-in-Swift&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="iOS" scheme="http://leviduan.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>How to Add &quot;…Read More&quot; to the end of UILabel</title>
    <link href="http://leviduan.com/2019/09/19/2019-09-19/"/>
    <id>http://leviduan.com/2019/09/19/2019-09-19/</id>
    <published>2019-09-19T14:50:18.000Z</published>
    <updated>2020-04-29T09:33:47.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Product-Requirements"><a href="#Product-Requirements" class="headerlink" title="Product Requirements"></a>Product Requirements</h3><p>There is a UILabel, the number of line are three, if the content is more than content in the UILabel, you have to add “… more” to the end of UILabel, and then you can click the text, the UILabel will be unfolded. </p><p>just like this pic below : </p><p><img src="https://i.stack.imgur.com/8Bq7I.png" alt="pic"></p><h3 id="How-to-solve-it"><a href="#How-to-solve-it" class="headerlink" title="How to solve it"></a>How to solve it</h3><p>At first, I want to calculate the visible text I can put into this UILabel with the current UILabel size by this fitString function.</p><p>When I get this visible text, and then I will prepare visible text and all UILabel’s text, if this count is the same, I will display it all text, if not I will display the visible text which will replace the last 8 character with “… more”.</p><p>I think that this method will resolve most question just like this, but there is a question, if the string just like this: “123\n345\n234\n123\n”, the last 8 character will be replace with “… more”, however, this is wrong, the correct way is that you won’t replace 8 character, just add “… more” to the end of visible text. The correct final string is </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">123</span><br><span class="line">123</span><br><span class="line">123 ...more</span><br></pre></td></tr></table></figure><p>And then I resolve it, but unexpectedly, if the string included some Emoji characters, the visible text characters will be wrong, so you will find some bug in the fitString function.</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">- (<span class="built_in">NSUInteger</span>)fitString:(<span class="built_in">NSString</span> *)string intoLabel:(<span class="built_in">UILabel</span> *)label</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIFont</span> *font           = label.font;</span><br><span class="line">    <span class="built_in">NSLineBreakMode</span> mode   = label.lineBreakMode;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CGFloat</span> labelWidth     = label.frame.size.width;</span><br><span class="line">    <span class="built_in">CGFloat</span> labelHeight    = label.frame.size.height;</span><br><span class="line">    <span class="built_in">CGSize</span>  sizeConstraint = <span class="built_in">CGSizeMake</span>(labelWidth, <span class="built_in">CGFLOAT_MAX</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (SYSTEM_VERSION_GREATER_THAN(iOS_7))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSDictionary</span> *attributes = @&#123; <span class="built_in">NSFontAttributeName</span> : font &#125;;</span><br><span class="line">        <span class="built_in">NSAttributedString</span> *attributedText = [[<span class="built_in">NSAttributedString</span> alloc] initWithString:string attributes:attributes];</span><br><span class="line">        <span class="built_in">CGRect</span> boundingRect = [attributedText boundingRectWithSize:sizeConstraint options:<span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> context:<span class="literal">nil</span>];</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (boundingRect.size.height &gt; labelHeight)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">NSUInteger</span> index = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">NSUInteger</span> prev;</span><br><span class="line">                <span class="built_in">NSCharacterSet</span> *characterSet = [<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                &#123;</span><br><span class="line">                    prev = index;</span><br><span class="line">                    <span class="keyword">if</span> (mode == <span class="built_in">NSLineBreakByCharWrapping</span>)</span><br><span class="line">                        index++;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        index = [string rangeOfCharacterFromSet:characterSet options:<span class="number">0</span> range:<span class="built_in">NSMakeRange</span>(index + <span class="number">1</span>, [string length] - index - <span class="number">1</span>)].location;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (index != <span class="built_in">NSNotFound</span> &amp;&amp; index &lt; [string length] &amp;&amp; [[string substringToIndex:index] boundingRectWithSize:sizeConstraint options:<span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> attributes:attributes context:<span class="literal">nil</span>].size.height &lt;= labelHeight);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> prev;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ([string sizeWithFont:font constrainedToSize:sizeConstraint lineBreakMode:mode].height &gt; labelHeight)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSUInteger</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">NSUInteger</span> prev;</span><br><span class="line">            <span class="built_in">NSCharacterSet</span> *characterSet = [<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                prev = index;</span><br><span class="line">                <span class="keyword">if</span> (mode == <span class="built_in">NSLineBreakByCharWrapping</span>)</span><br><span class="line">                    index++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    index = [string rangeOfCharacterFromSet:characterSet options:<span class="number">0</span> range:<span class="built_in">NSMakeRange</span>(index + <span class="number">1</span>, [string length] - index - <span class="number">1</span>)].location;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (index != <span class="built_in">NSNotFound</span> &amp;&amp; index &lt; [string length] &amp;&amp; [[string substringToIndex:index] sizeWithFont:font constrainedToSize:sizeConstraint lineBreakMode:mode].height &lt;= labelHeight);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [string length];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Do you find it? </p><h3 id="Show-my-code"><a href="#Show-my-code" class="headerlink" title="Show my code"></a>Show my code</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UILabel</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addTrailing</span><span class="params">(with trailingText: String, moreText: String, moreTextFont: UIFont, moreTextColor: UIColor)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> readMoreText: <span class="type">String</span> = trailingText + moreText</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> lengthForVisibleString: <span class="type">Int</span> = <span class="keyword">self</span>.vissibleTextLength</span><br><span class="line">        <span class="keyword">let</span> mutableString: <span class="type">String</span> = <span class="keyword">self</span>.text!</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> trimmedString: <span class="type">String</span>? = (mutableString <span class="keyword">as</span> <span class="type">NSString</span>).substring(to: lengthForVisibleString)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">self</span>.text?.<span class="built_in">count</span>)! - lengthForVisibleString) &lt;= <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> style = <span class="type">NSMutableParagraphStyle</span>()</span><br><span class="line">            style.lineSpacing = <span class="number">4.0</span> <span class="comment">// change line spacing between paragraph like 36 or 48</span></span><br><span class="line">            <span class="keyword">let</span> answerAttributed = <span class="type">NSMutableAttributedString</span>(string: <span class="keyword">self</span>.text!, attributes: [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: <span class="keyword">self</span>.font, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.paragraphStyle: style])</span><br><span class="line">            <span class="keyword">self</span>.attributedText = answerAttributed</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> leviTrimmedForReadMore = <span class="type">String</span>(trimmedString ?? <span class="string">""</span>) + <span class="type">String</span>(<span class="string">"... more"</span>)</span><br><span class="line">        <span class="keyword">self</span>.text = leviTrimmedForReadMore</span><br><span class="line">        <span class="keyword">let</span> ddlengthForVisibleString: <span class="type">Int</span> = <span class="keyword">self</span>.vissibleTextLength</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">self</span>.text?.<span class="built_in">count</span>)! - ddlengthForVisibleString) &lt;= <span class="number">0</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> trimmedForReadMore: <span class="type">String</span> = trimmedString! + trailingText</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> style = <span class="type">NSMutableParagraphStyle</span>()</span><br><span class="line">            style.lineSpacing = <span class="number">4.0</span> <span class="comment">// change line spacing between paragraph like 36 or 48</span></span><br><span class="line">            <span class="keyword">let</span> answerAttributed = <span class="type">NSMutableAttributedString</span>(string: trimmedForReadMore, attributes: [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: <span class="keyword">self</span>.font, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.paragraphStyle: style])</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> readMoreAttributed = <span class="type">NSMutableAttributedString</span>(string: moreText, attributes: [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: moreTextFont, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.foregroundColor: moreTextColor, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.paragraphStyle: style])</span><br><span class="line">            </span><br><span class="line">            answerAttributed.append(readMoreAttributed)</span><br><span class="line">            <span class="keyword">self</span>.attributedText = answerAttributed</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> readMoreLength: <span class="type">Int</span> = (readMoreText.utf16.<span class="built_in">count</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> trimmedForReadMore: <span class="type">String</span> = (trimmedString! <span class="keyword">as</span> <span class="type">NSString</span>).substring(to: (trimmedString?.utf16.<span class="built_in">count</span> ?? <span class="number">0</span>) - readMoreLength) + trailingText</span><br><span class="line">            <span class="keyword">let</span> style = <span class="type">NSMutableParagraphStyle</span>()</span><br><span class="line">            style.lineSpacing = <span class="number">4.0</span> <span class="comment">// change line spacing between paragraph like 36 or 48</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> answerAttributed = <span class="type">NSMutableAttributedString</span>(string: trimmedForReadMore, attributes: [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: <span class="keyword">self</span>.font, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.paragraphStyle: style])</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> readMoreAttributed = <span class="type">NSMutableAttributedString</span>(string: moreText, attributes: [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: moreTextFont, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.foregroundColor: moreTextColor, <span class="type">NSAttributedString</span>.<span class="type">Key</span>.paragraphStyle: style])</span><br><span class="line">            </span><br><span class="line">            answerAttributed.append(readMoreAttributed)</span><br><span class="line">            <span class="keyword">self</span>.attributedText = answerAttributed</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> vissibleTextLength: <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> font: <span class="type">UIFont</span> = <span class="keyword">self</span>.font</span><br><span class="line">        <span class="keyword">let</span> mode: <span class="type">NSLineBreakMode</span> = <span class="keyword">self</span>.lineBreakMode</span><br><span class="line">        <span class="keyword">let</span> labelWidth: <span class="type">CGFloat</span> = <span class="keyword">self</span>.frame.size.width</span><br><span class="line">        <span class="keyword">let</span> labelHeight: <span class="type">CGFloat</span> = <span class="keyword">self</span>.frame.size.height</span><br><span class="line">        <span class="keyword">let</span> sizeConstraint = <span class="type">CGSize</span>(width: labelWidth, height: <span class="type">CGFloat</span>.greatestFiniteMagnitude)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> attributes: [<span class="type">AnyHashable</span>: <span class="type">Any</span>] = [<span class="type">NSAttributedString</span>.<span class="type">Key</span>.font: font]</span><br><span class="line">        <span class="keyword">let</span> attributedText = <span class="type">NSAttributedString</span>(string: <span class="keyword">self</span>.text!, attributes: attributes <span class="keyword">as</span>? [<span class="type">NSAttributedString</span>.<span class="type">Key</span> : <span class="type">Any</span>])</span><br><span class="line">        <span class="keyword">let</span> boundingRect: <span class="type">CGRect</span> = attributedText.boundingRect(with: sizeConstraint, options: .usesLineFragmentOrigin, context: <span class="literal">nil</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> boundingRect.size.height &gt; labelHeight &#123;</span><br><span class="line">            <span class="keyword">var</span> index: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">            <span class="keyword">var</span> prev: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">            <span class="keyword">let</span> characterSet = <span class="type">CharacterSet</span>.whitespacesAndNewlines</span><br><span class="line">            <span class="keyword">repeat</span> &#123;</span><br><span class="line">                prev = index</span><br><span class="line">                <span class="keyword">if</span> mode == <span class="type">NSLineBreakMode</span>.byCharWrapping &#123;</span><br><span class="line">                    index += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    index = (<span class="keyword">self</span>.text! <span class="keyword">as</span> <span class="type">NSString</span>).rangeOfCharacter(from: characterSet, options: [], range: <span class="type">NSRange</span>(location: index + <span class="number">1</span>, length: <span class="keyword">self</span>.text!.<span class="built_in">count</span> - index - <span class="number">1</span>)).location</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">while</span> index != <span class="type">NSNotFound</span> &amp;&amp; index &lt; <span class="keyword">self</span>.text!.<span class="built_in">count</span> &amp;&amp; (<span class="keyword">self</span>.text! <span class="keyword">as</span> <span class="type">NSString</span>).substring(to: index).boundingRect(with: sizeConstraint, options: .usesLineFragmentOrigin, attributes: attributes <span class="keyword">as</span>? [<span class="type">NSAttributedString</span>.<span class="type">Key</span> : <span class="type">Any</span>], context: <span class="literal">nil</span>).size.height &lt;= labelHeight</span><br><span class="line">            <span class="keyword">return</span> prev</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.text!.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//You can use it</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> biography = model.biography &#123;</span><br><span class="line">    <span class="keyword">if</span> biography.<span class="built_in">count</span> &gt;= <span class="number">10</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> readmoreFont = <span class="type">DJFont</span>.lightHelveticaFont(ofSize: <span class="number">16.0</span>)</span><br><span class="line">        <span class="keyword">let</span> readmoreFontColor = <span class="type">UIColor</span>(fromHexString: <span class="string">"818181"</span>)</span><br><span class="line">        <span class="keyword">self</span>.contentLabel.addTrailing(with: <span class="string">"... "</span>, moreText: <span class="string">"more"</span>, moreTextFont: readmoreFont!, moreTextColor: readmoreFontColor!)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Product-Requirements&quot;&gt;&lt;a href=&quot;#Product-Requirements&quot; class=&quot;headerlink&quot; title=&quot;Product Requirements&quot;&gt;&lt;/a&gt;Product Requirements&lt;/h3&gt;&lt;
      
    
    </summary>
    
      <category term="iOS" scheme="http://leviduan.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Week Tips(2019.4.1-2019.4.7)</title>
    <link href="http://leviduan.com/2019/04/07/2019-04-07-1/"/>
    <id>http://leviduan.com/2019/04/07/2019-04-07-1/</id>
    <published>2019-04-07T08:26:18.000Z</published>
    <updated>2020-04-29T09:33:47.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="H5-react增加loading页面"><a href="#H5-react增加loading页面" class="headerlink" title="H5 react增加loading页面"></a>H5 react增加loading页面</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件:"></a>安装插件:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i react-loading  --save</span><br></pre></td></tr></table></figure><p>npm web:<br><a href="https://www.npmjs.com/package/react-loading" target="_blank" rel="noopener">https://www.npmjs.com/package/react-loading</a></p><h4 id="Demo展示页面"><a href="#Demo展示页面" class="headerlink" title="Demo展示页面:"></a>Demo展示页面:</h4><p><a href="https://codesandbox.io/s/mqx0ql55qp" target="_blank" rel="noopener">https://codesandbox.io/s/mqx0ql55qp</a></p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ReactLoading</span> <span class="attr">type</span>=<span class="string">'spokes'</span> <span class="attr">color</span>=<span class="string">"#262729"</span> <span class="attr">height</span>=<span class="string">"0.3rem"</span> <span class="attr">width</span>=<span class="string">"0.3rem"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="loading样式"><a href="#loading样式" class="headerlink" title="loading样式:"></a>loading样式:</h4><p><img src="/images/15546126208728/15546136593422.jpg" alt></p><h4 id="模拟iOS-loading样式"><a href="#模拟iOS-loading样式" class="headerlink" title="模拟iOS loading样式:"></a>模拟iOS loading样式:</h4><p>html:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"SnsRankOther-loadingPic"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ReactLoading</span> <span class="attr">type</span>=<span class="string">'spokes'</span> <span class="attr">color</span>=<span class="string">"#262729"</span> <span class="attr">height</span>=<span class="string">"0.3rem"</span> <span class="attr">width</span>=<span class="string">"0.3rem"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.SnsRankOther-loadingPic</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(230, 230, 230, 0.479);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0.05rem</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果:</p><p><img src="/images/15546126208728/15546139826383.jpg" alt></p><h3 id="iOS-pod-update后React-framework报错"><a href="#iOS-pod-update后React-framework报错" class="headerlink" title="iOS pod update后React framework报错"></a>iOS pod update后React framework报错</h3><p>问题出现: npm install 后 podupdate， Xcode运行报错，错误提示 React google::logmessage出题。</p><h4 id="编译报错提示："><a href="#编译报错提示：" class="headerlink" title="编译报错提示："></a>编译报错提示：</h4><p><img src="/images/15546126208728/15546141634870.png" alt></p><p>log:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Undefined symbols for architecture x86_64:</span><br><span class="line">  &quot;google::LogMessage::LogMessage(char const*, int, int)&quot;, referenced from:</span><br><span class="line">      facebook::react::CxxNativeModule::invoke(unsigned int, folly::dynamic&amp;&amp;, int)::$_1::operator()() const in CxxNativeModule.o</span><br><span class="line">      facebook::react::JSException::buildMessage(OpaqueJSContext const*, OpaqueJSValue const*, OpaqueJSString*, char const*) in JSCHelpers.o</span><br><span class="line">  &quot;double_conversion::DoubleToStringConverter::ToShortestIeeeNumber(double, double_conversion::StringBuilder*, double_conversion::DoubleToStringConverter::DtoaMode) const&quot;, referenced from:</span><br><span class="line">      double_conversion::DoubleToStringConverter::ToShortest(double, double_conversion::StringBuilder*) const in CxxNativeModule.o</span><br><span class="line">  &quot;double_conversion::DoubleToStringConverter::ToFixed(double, int, double_conversion::StringBuilder*) const&quot;, referenced from:</span><br><span class="line">      std::__1::enable_if&lt;(std::is_floating_point&lt;double&gt;::value) &amp;&amp; (IsSomeString&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt;::value), void&gt;::type folly::toAppend&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, double&gt;(double, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, double_conversion::DoubleToStringConverter::DtoaMode, unsigned int) in CxxNativeModule.o</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h4><p>working manually adding DoubleConversion and glog to Link Binary With Libraries of React framework target in @CocoaPods project.</p><p><img src="/images/15546126208728/15546142677714.png" alt></p><h3 id="UITableView回滚到顶部的几种方法"><a href="#UITableView回滚到顶部的几种方法" class="headerlink" title="UITableView回滚到顶部的几种方法"></a>UITableView回滚到顶部的几种方法</h3><p>问题: tableview每次回滚是滚到了第一个cell上面，但这个tableview是有表头的。</p><p>看了下代码:</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">self</span>.tableview.scrollToRow(at: <span class="type">IndexPath</span>(row: <span class="number">0</span>, section: <span class="number">0</span>), at: .top, animated: <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>改成如下方式:</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">self</span>.contentTB.setContentOffset(<span class="type">CGPoint</span>(x: <span class="number">0</span>, y: <span class="number">0</span>), animated: <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>问题解决</p><p>UITableView回滚到顶部的几个方法：</p><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line">[<span class="keyword">self</span>.tableView  scrollRectToVisible:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>) animated:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line">[<span class="keyword">self</span>.tableView setContentOffset:<span class="built_in">CGPointMake</span>(<span class="number">0</span>,<span class="number">0</span>) animated:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法三</span></span><br><span class="line"><span class="built_in">NSIndexPath</span>* indexPat = [<span class="built_in">NSIndexPath</span> indexPathForRow:<span class="number">0</span> inSection:<span class="number">0</span>];</span><br><span class="line">[<span class="keyword">self</span>.tableView scrollToRowAtIndexPath:indexPat atScrollPosition:<span class="built_in">UITableViewScrollPositionBottom</span> animated:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure><p>方法一可以回滚到表头，其他两个方法只是回滚到第一个cell.</p><h3 id="iOS通过Safari调试H5"><a href="#iOS通过Safari调试H5" class="headerlink" title="iOS通过Safari调试H5"></a>iOS通过Safari调试H5</h3><h4 id="通过数据线，将手机连接电脑"><a href="#通过数据线，将手机连接电脑" class="headerlink" title="通过数据线，将手机连接电脑"></a>通过数据线，将手机连接电脑</h4><h4 id="打开手机，-Settings-safari-Advanced-Web-Inspector-开关打开"><a href="#打开手机，-Settings-safari-Advanced-Web-Inspector-开关打开" class="headerlink" title="打开手机， Settings - safari - Advanced - Web Inspector 开关打开"></a>打开手机， Settings - safari - Advanced - Web Inspector 开关打开</h4><h4 id="打开电脑safari，preference-Advanced-Show-Develop-menu-in-menu-bar-开关打开-如图"><a href="#打开电脑safari，preference-Advanced-Show-Develop-menu-in-menu-bar-开关打开-如图" class="headerlink" title="打开电脑safari，preference - Advanced - Show Develop menu in menu bar 开关打开,如图:"></a>打开电脑safari，preference - Advanced - Show Develop menu in menu bar 开关打开,如图:</h4><p><img src="/images/15546126208728/15546152534699.jpg" alt></p><h4 id="打开电脑safari-Develop-bar-中会看到你的手机，如图所示，点击进行调试"><a href="#打开电脑safari-Develop-bar-中会看到你的手机，如图所示，点击进行调试" class="headerlink" title="打开电脑safari - Develop bar 中会看到你的手机，如图所示，点击进行调试:"></a>打开电脑safari - Develop bar 中会看到你的手机，如图所示，点击进行调试:</h4><p><img src="/images/15546126208728/15546153459838.jpg" alt></p><h4 id="点击web后进入了调试页面，可以进行调试了。"><a href="#点击web后进入了调试页面，可以进行调试了。" class="headerlink" title="点击web后进入了调试页面，可以进行调试了。"></a>点击web后进入了调试页面，可以进行调试了。</h4><p><img src="/images/15546126208728/15546153855792.jpg" alt></p><h3 id="JavaScript-获取时间戳转换美国日期简写的方法："><a href="#JavaScript-获取时间戳转换美国日期简写的方法：" class="headerlink" title="JavaScript 获取时间戳转换美国日期简写的方法："></a>JavaScript 获取时间戳转换美国日期简写的方法：</h3><p>需求: 通过服务端传时间戳显示页面如下:</p><p><img src="/images/15546126208728/15546161033203.jpg" alt></p><p>代码如下, request.data.start_date为时间戳类型，通过js方法转换成美国日期简写的正确的方式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>(request.data.start_date);</span><br><span class="line"><span class="keyword">let</span> startMonth = startDate.toDateString().split(<span class="string">" "</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">let</span> startDay = startDate.toDateString().split(<span class="string">" "</span>)[<span class="number">2</span>] + <span class="string">'th'</span></span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(request.data.end_date);</span><br><span class="line"><span class="keyword">let</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(request.data.end_date);</span><br><span class="line"><span class="keyword">let</span> endMonth = endDate.toDateString().split(<span class="string">" "</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">let</span> endDay = endDate.toDateString().split(<span class="string">" "</span>)[<span class="number">2</span>] + <span class="string">'th'</span></span><br><span class="line">dateText = startDay + <span class="string">' '</span> + startMonth + <span class="string">' - '</span> + endDay + <span class="string">' '</span> + endMonth</span><br></pre></td></tr></table></figure><h3 id="iOS倒计时方法："><a href="#iOS倒计时方法：" class="headerlink" title="iOS倒计时方法："></a>iOS倒计时方法：</h3><p>效果如下:</p><p><img src="/images/15546126208728/15546165365762.jpg" alt></p><p>代码如下</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> timer: <span class="type">Timer</span>!</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> timeFormat = <span class="string">"HH:mm:ss"</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> diffDate: <span class="type">NSDate</span>!</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">let</span> date1970 = <span class="type">NSDate</span>(timeIntervalSince1970: <span class="number">0</span>)</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> fromDate: <span class="type">NSDate</span> = <span class="type">NSDate</span>()</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> currentDate: <span class="type">NSDate</span> = <span class="type">NSDate</span>()</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> range: <span class="type">NSRange</span>!</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> targetTime: <span class="type">TimeInterval</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> currentTime: <span class="type">TimeInterval</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">var</span> endOfTimer: <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> timeCounted &gt;= currentTime</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> timeCounted: <span class="type">TimeInterval</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> timeCounted = <span class="type">NSDate</span>().timeIntervalSince(fromDate <span class="keyword">as</span> <span class="type">Date</span>)</span><br><span class="line">    <span class="keyword">return</span> round(timeCounted &lt; <span class="number">0</span> ? <span class="number">0</span> : timeCounted)</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">var</span> dateFormatter: <span class="type">DateFormatter</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> df = <span class="type">DateFormatter</span>()</span><br><span class="line">    df.locale = <span class="type">Locale</span>(identifier: <span class="string">"zh_CN"</span>)</span><br><span class="line">    df.dateStyle = <span class="type">DateFormatter</span>.<span class="type">Style</span>.medium</span><br><span class="line">    df.timeStyle = <span class="type">DateFormatter</span>.<span class="type">Style</span>.medium</span><br><span class="line">    df.dateFormat = timeFormat</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line">&#125;  </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    disposeTimer()</span><br><span class="line">    timer = <span class="type">Timer</span>.scheduledTimer(timeInterval: <span class="number">1.0</span>,</span><br><span class="line">                                 target: <span class="keyword">self</span>,</span><br><span class="line">                                 selector: #selector(updateText),</span><br><span class="line">                                 userInfo: <span class="literal">nil</span>,</span><br><span class="line">                                 repeats: <span class="literal">true</span>)</span><br><span class="line">    <span class="type">RunLoop</span>.current.add(timer, forMode: <span class="type">RunLoop</span>.<span class="type">Mode</span>.common)</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">disposeTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> timer != <span class="literal">nil</span> &#123;</span><br><span class="line">        timer.invalidate()</span><br><span class="line">        timer = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateText</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> diffDate != <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> date = diffDate.addingTimeInterval(round(timeCounted * -<span class="number">1</span>)) <span class="keyword">as</span> <span class="type">Date</span></span><br><span class="line">    <span class="keyword">let</span> formattedText = timeCounted &lt; <span class="number">0</span></span><br><span class="line">        ? dateFormatter.string(from: date1970.addingTimeInterval(<span class="number">0</span>) <span class="keyword">as</span> <span class="type">Date</span>)</span><br><span class="line">        : <span class="keyword">self</span>.surplusTime(date)</span><br><span class="line">    </span><br><span class="line">    countdownLabel.text = <span class="string">" - Result will be revealed in "</span> + formattedText</span><br><span class="line">    countdownLabel.sizeToFit()</span><br><span class="line">    </span><br><span class="line">    setNeedsDisplay()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> endOfTimer &#123;</span><br><span class="line">        disposeTimer()</span><br><span class="line">        countdownLabel.text = <span class="string">" "</span></span><br><span class="line">        countdownLabel.sizeToFit()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">surplusTime</span><span class="params">(<span class="number">_</span> to1970Date: Date)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> calendar = <span class="type">Calendar</span>.<span class="keyword">init</span>(identifier: .gregorian);</span><br><span class="line">    <span class="keyword">var</span> labelText = timeFormat;</span><br><span class="line">    <span class="keyword">let</span> comp = calendar.dateComponents([.day, .hour, .minute, .second], from: <span class="type">NSDate</span>(timeIntervalSince1970: <span class="number">0</span>) <span class="keyword">as</span> <span class="type">Date</span>, to: to1970Date)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> day = comp.day ,<span class="keyword">let</span> <span class="number">_</span> = timeFormat.range(of: <span class="string">"dd"</span>)&#123;</span><br><span class="line">        labelText = labelText.replacingOccurrences(of: <span class="string">"dd"</span>, with: <span class="type">String</span>.<span class="keyword">init</span>(format: <span class="string">"%02ld"</span>, day))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> hour = comp.hour ,<span class="keyword">let</span> <span class="number">_</span> = timeFormat.range(of: <span class="string">"hh"</span>)&#123;</span><br><span class="line">        labelText = labelText.replacingOccurrences(of: <span class="string">"hh"</span>, with: <span class="type">String</span>.<span class="keyword">init</span>(format: <span class="string">"%02ld"</span>, hour))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> hour = comp.hour ,<span class="keyword">let</span> <span class="number">_</span> = timeFormat.range(of: <span class="string">"HH"</span>)&#123;</span><br><span class="line">        labelText = labelText.replacingOccurrences(of: <span class="string">"HH"</span>, with: <span class="type">String</span>.<span class="keyword">init</span>(format: <span class="string">"%02ld"</span>, hour))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> minute = comp.minute ,<span class="keyword">let</span> <span class="number">_</span> = timeFormat.range(of: <span class="string">"mm"</span>)&#123;</span><br><span class="line">        labelText = labelText.replacingOccurrences(of: <span class="string">"mm"</span>, with: <span class="type">String</span>.<span class="keyword">init</span>(format: <span class="string">"%02ld"</span>, minute))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> second = comp.second ,<span class="keyword">let</span> <span class="number">_</span> = timeFormat.range(of: <span class="string">"ss"</span>)&#123;</span><br><span class="line">        labelText = labelText.replacingOccurrences(of: <span class="string">"ss"</span>, with: <span class="type">String</span>.<span class="keyword">init</span>(format: <span class="string">"%02ld"</span>, second))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> labelText</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTML5-写-REM-js文件方法"><a href="#HTML5-写-REM-js文件方法" class="headerlink" title="HTML5 写 REM.js文件方法"></a>HTML5 写 REM.js文件方法</h3><ol><li>复制下面这段代码到你的页面的头部的script标签的最前面。如果是react js，直接放在index.js文件里：</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./rem.js'</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>根据设计稿大小，调整里面的最后两个参数值。</p></li><li><p>使用1rem=100px转换你的设计稿的像素，例如设计稿上某个块是100px <em> 300px,换算成rem则为1rem </em> 3rem。</p></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> win = <span class="built_in">window</span>;</span><br><span class="line"><span class="keyword">var</span> doc = win.document;</span><br><span class="line"><span class="keyword">var</span> docEl = doc.documentElement;</span><br><span class="line"><span class="keyword">var</span> tid;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">refreshRem</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = docEl.clientWidth;</span><br><span class="line">    <span class="keyword">var</span> height = docEl.clientHeight;</span><br><span class="line">    <span class="keyword">if</span>(width&gt;=<span class="number">640</span>)&#123;</span><br><span class="line">        docEl.style.fontSize = <span class="string">'100px'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        docEl.style.fontSize = <span class="number">100</span> * (width / <span class="number">375</span>) + <span class="string">'px'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">win.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    clearTimeout(tid);</span><br><span class="line">    tid = setTimeout(refreshRem, <span class="number">300</span>);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">win.addEventListener(<span class="string">'pageshow'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.persisted) &#123;</span><br><span class="line">        clearTimeout(tid);</span><br><span class="line">        tid = setTimeout(refreshRem, <span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">refreshRem();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;H5-react增加loading页面&quot;&gt;&lt;a href=&quot;#H5-react增加loading页面&quot; class=&quot;headerlink&quot; title=&quot;H5 react增加loading页面&quot;&gt;&lt;/a&gt;H5 react增加loading页面&lt;/h3&gt;&lt;h4 i
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>React.js/HTML5和iOS双向通信</title>
    <link href="http://leviduan.com/2019/04/07/2019-04-07/"/>
    <id>http://leviduan.com/2019/04/07/2019-04-07/</id>
    <published>2019-04-07T08:26:18.000Z</published>
    <updated>2020-04-29T09:33:47.477Z</updated>
    
    <content type="html"><![CDATA[<p>最近，我使用WKWebView和React.js进行双向通信,自己写了React.js嵌入到Native中。</p><h2 id="Native操作Web，通过两种方式传值"><a href="#Native操作Web，通过两种方式传值" class="headerlink" title="Native操作Web，通过两种方式传值"></a>Native操作Web，通过两种方式传值</h2><h3 id="第一种，通过JS传值给Native"><a href="#第一种，通过JS传值给Native" class="headerlink" title="第一种，通过JS传值给Native"></a>第一种，通过JS传值给Native</h3><p>通过这种方式，可以通过Swift执行DOM操作，顺便说一句，webView.evaluateJavaScript返回脚本执行结果的内容。这个处理程序似乎是在主线程上执行的。</p><p>Native调用JS代码方法如下:</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">"payResult(true)"</span></span><br><span class="line">    webView.evaluateJavaScript(str) &#123; (result, error) <span class="keyword">in</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Javascript处理逻辑方法如下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">payResult = <span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (value === <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'true'</span>)</span><br><span class="line">        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">            pushnotice: <span class="string">'1'</span></span><br><span class="line">        &#125;));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'false'</span>)</span><br><span class="line">        <span class="keyword">this</span>.setState(<span class="function"><span class="params">prevState</span> =&gt;</span> (&#123;</span><br><span class="line">            pushnotice: <span class="string">'0'</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果JS的payResult方法没有调用，那就加上这样一句话window.payResult，有可能被组件屏蔽无法全局调用。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="built_in">window</span>.payResult = <span class="keyword">this</span>.payResult</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二种，通过get请求传值"><a href="#第二种，通过get请求传值" class="headerlink" title="第二种，通过get请求传值"></a>第二种，通过get请求传值</h3><p>通过get请求方式将参数传到js的请求URL链接中。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> webUrl = webUrl &#123;</span><br><span class="line">    url = webUrl</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> uid = userID &#123;</span><br><span class="line">        url += <span class="string">"?"</span> + <span class="string">"uid="</span> + uid</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> topicId = topicId &#123;</span><br><span class="line">        url += <span class="string">"&amp;"</span> + <span class="string">"topic="</span> + topicId</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> isRank == <span class="literal">true</span> &#123;</span><br><span class="line">        url += <span class="string">"&amp;"</span> + <span class="string">"type=2"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>react.js通过URL拼接方式解析传递的参数,方法如下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> params = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> str = <span class="keyword">this</span>.props.location.search</span><br><span class="line"><span class="keyword">let</span> seg = str.replace(<span class="regexp">/^\?/</span>, <span class="string">''</span>).split(<span class="string">'&amp;'</span>)</span><br><span class="line"><span class="keyword">let</span> len = seg.length</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (seg[i]) &#123;</span><br><span class="line">       <span class="keyword">let</span> p = seg[i].split(<span class="string">'='</span>);</span><br><span class="line">       params[p[<span class="number">0</span>]] = p[<span class="number">1</span>];   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式params.uid | param.topic | param.type 来获取参数</p><h2 id="Native操作Web，通过两种方式传值-1"><a href="#Native操作Web，通过两种方式传值-1" class="headerlink" title="Native操作Web，通过两种方式传值"></a>Native操作Web，通过两种方式传值</h2><h3 id="Native操作"><a href="#Native操作" class="headerlink" title="Native操作"></a>Native操作</h3><ol><li>实例化WKWebViewConfiguration和WKUserContentController,userController在JavaScript的注册处理调用名称。并设置实现WKScriptMessageHandler协议的代理。</li></ol><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> webConfiguration = <span class="type">WKWebViewConfiguration</span>()</span><br><span class="line">webConfiguration.preferences = <span class="type">WKPreferences</span>()</span><br><span class="line">webConfiguration.preferences.minimumFontSize = <span class="number">10</span>;</span><br><span class="line">webConfiguration.preferences.javaScriptEnabled = <span class="literal">true</span>;</span><br><span class="line">webConfiguration.preferences.javaScriptCanOpenWindowsAutomatically = <span class="literal">false</span>;</span><br><span class="line">webConfiguration.userContentController = <span class="type">WKUserContentController</span>()</span><br><span class="line">webConfiguration.processPool = <span class="type">WKProcessPool</span>()</span><br><span class="line">webConfiguration.userContentController.add(<span class="keyword">self</span> <span class="keyword">as</span> <span class="type">WKScriptMessageHandler</span>, name:<span class="string">"pushAction"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> webView = <span class="type">WKWebView</span>(frame: .zero, configuration: webConfiguration)</span><br><span class="line">webView.scrollView.bounces = <span class="literal">false</span></span><br><span class="line">webView.scrollView.showsVerticalScrollIndicator = <span class="literal">false</span></span><br><span class="line">webView.scrollView.showsHorizontalScrollIndicator = <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过WKScriptMessageHandler协议进行监控</li></ol><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">userContentController</span><span class="params">(<span class="number">_</span> userContentController: WKUserContentController, didReceive message: WKScriptMessage)</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(message.name)</span><br><span class="line">    <span class="built_in">print</span>(message.body)</span><br><span class="line">    jsInvokeNativeHandler(message)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">jsInvokeNativeHandler</span><span class="params">(<span class="number">_</span> message: WKScriptMessage)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> message.isKind(of: <span class="type">WKScriptMessage</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> serialQueue = <span class="type">DispatchQueue</span>(label: <span class="string">"com.test.mySerialQueue"</span>)</span><br><span class="line">        serialQueue.sync &#123;</span><br><span class="line">            <span class="keyword">if</span> message.name == <span class="string">"pushAction"</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> dict : <span class="type">NSDictionary</span> = message.body <span class="keyword">as</span>? <span class="type">NSDictionary</span> &#123;</span><br><span class="line">                     <span class="keyword">if</span> <span class="keyword">let</span> content = dict[<span class="string">"content"</span>] <span class="keyword">as</span>? <span class="type">String</span> &#123;</span><br><span class="line">                        <span class="keyword">self</span>.sendPushNotification(content)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于解析，和Web进行协议，我在H5写的代码通过message传过来的是一个字典类型 {content: ‘…’}。</p><h3 id="web端操作"><a href="#web端操作" class="headerlink" title="web端操作"></a>web端操作</h3><p>H5如何传递方法给native？</p><p>传值方法如下，iOS和Android接受的方法不同，要单独进行处理:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.htmlCallMobileDeja = <span class="function"><span class="keyword">function</span>(<span class="params">handlerMethod, parameters</span>)</span>&#123;    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> u = navigator.userAgent; </span><br><span class="line">        <span class="keyword">var</span> isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span> </span><br><span class="line">        <span class="keyword">var</span> isiOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>) </span><br><span class="line">        <span class="keyword">if</span> (isiOS) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">window</span>.webkit) &#123;</span><br><span class="line">                <span class="built_in">window</span>.webkit.messageHandlers[handlerMethod].postMessage(dic);</span><br><span class="line">                <span class="built_in">console</span>.log(handlerMethod)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(isAndroid)&#123;</span><br><span class="line">            <span class="built_in">window</span>[<span class="string">'JsClient'</span>][handlerMethod](parameters)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'The native context does not exist yet'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>javascript通过这种方式进行传值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dic = &#123;</span><br><span class="line">    <span class="string">'event_name'</span>: event_name + <span class="string">''</span>,</span><br><span class="line">    <span class="string">'event_first_param'</span>: event_first_param + <span class="string">''</span>,</span><br><span class="line">    <span class="string">'event_second_param'</span>: event_second_param + <span class="string">''</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.htmlCallMobileDeja(<span class="string">'hideMBP'</span>, dic)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近，我使用WKWebView和React.js进行双向通信,自己写了React.js嵌入到Native中。&lt;/p&gt;
&lt;h2 id=&quot;Native操作Web，通过两种方式传值&quot;&gt;&lt;a href=&quot;#Native操作Web，通过两种方式传值&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="web" scheme="http://leviduan.com/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>《剑指offer》 数组中出现次数超过一半的数字</title>
    <link href="http://leviduan.com/2019/03/13/2019-03-13/"/>
    <id>http://leviduan.com/2019/03/13/2019-03-13/</id>
    <published>2019-03-12T16:00:18.000Z</published>
    <updated>2020-04-29T09:33:47.476Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OJ-address"><a href="#OJ-address" class="headerlink" title="OJ address"></a>OJ address</h3><p>website : <a href="https://www.nowcoder.com/ta/coding-interviews?page=2" target="_blank" rel="noopener">《剑指offer》数组中出现次数超过一半的数字</a></p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。</p><h3 id="Solution-in-C-one-solution"><a href="#Solution-in-C-one-solution" class="headerlink" title="Solution in C++ (one solution)"></a>Solution in C++ (one solution)</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = numbers.size();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        sort(numbers.begin(), numbers.end());</span><br><span class="line">        <span class="keyword">int</span> mid = numbers[n/<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] == mid) ++count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count*<span class="number">2</span> &gt; n) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Solution-in-C-two-solution"><a href="#Solution-in-C-two-solution" class="headerlink" title="Solution in C++ (two solution)"></a>Solution in C++ (two solution)</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = numbers.size();</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num = numbers[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] == num) ++count;</span><br><span class="line">        <span class="keyword">else</span> --count;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">        num = numbers[i];</span><br><span class="line">        count = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] == num) ++count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count*<span class="number">2</span> &gt; n) <span class="keyword">return</span> num;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="My-Idea"><a href="#My-Idea" class="headerlink" title="My Idea"></a>My Idea</h3><p>Solution one ： 数组排序后，如果符合条件的数存在，则一定是数组中间那个数（比如：1，2，2，2，3；或2，2，2，3，4；或2，3，4，4，4等等）</p><p>Solution two ： 采用阵地攻守的思想：</p><ol><li>第一个数字作为第一个士兵，守阵地；count = 1；</li><li>遇到相同元素，count++;</li><li>遇到不相同元素，即为敌人，同归于尽,count–；当遇到count为0的情况，又以新的i值作为守阵地的士兵，继续下去，到最后还留在阵地上的士兵，有可能是主元素。</li><li>再加一次循环，记录这个士兵的个数看是否大于数组一般即可</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;OJ-address&quot;&gt;&lt;a href=&quot;#OJ-address&quot; class=&quot;headerlink&quot; title=&quot;OJ address&quot;&gt;&lt;/a&gt;OJ address&lt;/h3&gt;&lt;p&gt;website : &lt;a href=&quot;https://www.nowcode
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://leviduan.com/categories/Algorithm/"/>
    
    
  </entry>
  
  <entry>
    <title>《剑指offer》 字符串的排列</title>
    <link href="http://leviduan.com/2019/03/12/2019-03-11-1/"/>
    <id>http://leviduan.com/2019/03/12/2019-03-11-1/</id>
    <published>2019-03-11T16:09:22.000Z</published>
    <updated>2020-04-29T09:33:47.476Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OJ-address"><a href="#OJ-address" class="headerlink" title="OJ address"></a>OJ address</h3><p>website : <a href="https://www.nowcoder.com/ta/coding-interviews?page=2" target="_blank" rel="noopener">《剑指offer》字符串的排列</a></p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。</p><h3 id="Solution-in-C"><a href="#Solution-in-C" class="headerlink" title="Solution in C++"></a>Solution in C++</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; result;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; Permutation(<span class="built_in">string</span> str) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!str.length()) <span class="keyword">return</span> result;</span><br><span class="line">        dfs(str, <span class="number">0</span>);</span><br><span class="line">        sort(result.begin(), result.end());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">int</span> begin)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (begin == str.length()) &#123;</span><br><span class="line">            result.push_back(str);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=begin;str[i]!=<span class="string">'\0'</span>;++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i!=begin &amp;&amp; str[begin]==str[i]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            swap(str[begin], str[i]);</span><br><span class="line">            dfs(str, begin+<span class="number">1</span>);</span><br><span class="line">            swap(str[begin], str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="My-Idea"><a href="#My-Idea" class="headerlink" title="My Idea"></a>My Idea</h3><p>全排列类型题目。解题思路就是，利用dfs深度遍历，看图说话。图已经很明显了。</p><ol><li>把第一个字符与当前字符以及后面每一个字符依次交换，获得首位后面的字符串再次进行递归； </li><li>递归的出口，就是只剩一个字符的时候，递归的循环过程，就是从每个子串的第二个字符开始依次与第一个字符交换，然后继续处理子串。</li><li>由于全排列就是从第一个数字起，每个数分别与它后面的数字交换，我们先尝试加个这样的判断——如果一个数与后面的数字相同那么这两个数就不交换了。例如abb，第一个数与后面两个数交换得bab，bba。然后abb中第二个数和第三个数相同，就不用交换了。</li></ol><p><img src="/images/15523538939861.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;OJ-address&quot;&gt;&lt;a href=&quot;#OJ-address&quot; class=&quot;headerlink&quot; title=&quot;OJ address&quot;&gt;&lt;/a&gt;OJ address&lt;/h3&gt;&lt;p&gt;website : &lt;a href=&quot;https://www.nowcode
      
    
    </summary>
    
      <category term="Algorithm" scheme="http://leviduan.com/categories/Algorithm/"/>
    
    
  </entry>
  
</feed>
